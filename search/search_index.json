{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to LPIC 1 Study Resources","text":"<p>Hello and welcome to our LPIC 1 website! We're thrilled to have you on board as you embark on your journey to become a certified Linux professional. Our website is designed to provide you with comprehensive resources, study materials, and support to help you achieve your goal.</p>"},{"location":"#what-is-lpic-1","title":"What is LPIC 1?","text":"<p>LPIC 1 is the first certification in the Linux Professional Institute Certification (LPIC) program. It validates your ability to perform maintenance tasks on the command line, install and configure a Linux system, and configure basic networking.</p>"},{"location":"#what-youll-find-here","title":"What You'll Find Here","text":"<ol> <li>Summarized Notes: Concise and easy-to-understand notes covering all LPIC 1 exam objectives.</li> <li>Practice Questions: Test your knowledge with practice questions and quizzes.</li> </ol>"},{"location":"#get-started","title":"Get Started","text":"<ul> <li>Click here to pull the image and access additional resources.</li> <li>Feel free to add more topic and send a collaborator request on github.</li> <li>Don't forget to give the repository a star click here to visit repository</li> </ul>"},{"location":"#lpic-1-exam-objectives","title":"LPIC 1 Exam Objectives","text":"<p>The LPIC 1 certification covers the following key areas:</p> <ol> <li>System Architecture</li> <li>Linux Installation and Package Management</li> <li>GNU and Unix Commands</li> <li>Devices, Linux Filesystems, and Filesystem Hierarchy Standard</li> <li>Shell Scripting and Data Management</li> <li>User Interfaces and Desktops</li> <li>Administrative Tasks</li> <li>Essential System Services</li> <li>Networking Fundamentals</li> <li>Security</li> </ol>"},{"location":"#why-choose-lpic-1","title":"Why Choose LPIC 1?","text":"<ul> <li>Industry Recognition: LPIC 1 is globally recognized and respected by employers.</li> <li>Career Advancement: Opens doors to roles such as Linux Administrator, System Engineer, and DevOps Engineer.</li> <li>Skill Validation: Demonstrates your proficiency in Linux system administration.</li> </ul>"},{"location":"#tips-for-success","title":"Tips for Success","text":"<ol> <li>Create a Study Plan: Allocate time for each topic and stick to your schedule.</li> <li>Practice Regularly: Use virtual machines or cloud instances to practice commands and configurations.</li> <li>Join Study Groups: Collaborate with others to share knowledge and solve problems.</li> <li>Take Mock Exams: Simulate the exam environment to build confidence.</li> </ol>"},{"location":"#need-help","title":"Need Help?","text":"<p>If you have any questions or need assistance, feel free to reach out to us. We're here to support you every step of the way!</p> <p>Good luck on your LPIC 1 journey! Let's make it a success together. \ud83d\ude0a</p>"},{"location":"Commands/","title":"USEFUL COMMANDS","text":"<p>tags:   - LINUX INSTALLATION AND PACKAGE MANAGEMENT   - ADMINISTRATIVE TASKS   - ESSENTIAL SYSTEM SERVICES</p> <p>...</p>"},{"location":"Commands/#system-architecture","title":"SYSTEM ARCHITECTURE","text":""},{"location":"Commands/#shutdown","title":"<code>shutdown</code>","text":"<p>command in Linux is used to halt, power off, or reboot the system. It provides various options to schedule shutdowns, broadcast messages, and cancel scheduled actions.</p> <p>Basic Syntax: shutdown [OPTION] [TIME] [MESSAGE]</p>"},{"location":"Commands/#flags-options","title":"Flags (Options):","text":"<ul> <li><code>-r or --reboot</code>: Reboot the system after shutdown.</li> <li><code>-h or --halt</code>: Halt the system (power off) after .</li> <li><code>-P or --poweroff</code>: Power off the system immediately (no delay).</li> <li><code>-c or --cancel</code>: Cancel a scheduled shutdown.</li> <li><code>+m or --delay=m</code>: Schedule shutdown after m minutes from now.</li> <li><code>hh:mm or --time=hh:mm</code>: Schedule shutdown at a specific time (24-hour format).</li> </ul>"},{"location":"Commands/#dmesg","title":"<code>dmesg</code>","text":"<p>command in Linux displays the kernel ring buffer, which contains messages generated by the kernel during system boot and operation. These messages provide valuable information for troubleshooting and debugging system issues.</p>"},{"location":"Commands/#flags-and-options","title":"Flags and Options:","text":"<ul> <li><code>-C, --clear</code>: Clears the ring buffer, removing all existing messages.</li> <li><code>-c, --read-clear</code>: Prints the current contents of the ring buffer and then clears it.</li> <li><code>-f, --facility</code>: Restricts output to a specific facility (e.g., kernel, device, or module).</li> <li><code>-H, --human</code>: Enables human-readable timestamps and pipes output to a pager (less).</li> <li><code>-L, --level</code>: Restricts output to a specific log level (e.g., error, warning, or info).</li> </ul> <p>### <code>rmmod</code> rmmod is used to remove or unload a kernel module from the system.</p>"},{"location":"Commands/#flags","title":"Flags:","text":"<ul> <li><code>-s</code> : Specify the module name or device file to unload (e.g., rmmod -s bluetooth).</li> <li><code>-f</code> :  Force the removal of the module, even if it\u2019s still in use (use with caution).</li> <li><code>-v</code> : Verbose mode, providing more detailed information about the removal process.</li> <li><code>-w, --Wait</code> : isolate a module that is in use and wait until it is no longer in use before removing.</li> <li><code>-s, --syslog</code> : send errors to the syslog (syetem log) instead of sending to standard error.  Example:  rmmod -s bluetooth  removes the Bluetooth module.</li> </ul> <p>### <code>modprobe</code> Purpose : modprobe is used to load or unload kernel modules.</p>"},{"location":"Commands/#flags_1","title":"Flags:","text":"<ul> <li><code>-r</code> : Remove the specified module (equivalent to rmmod).</li> <li><code>-a</code> : Auto-load modules specified in /etc/modules or /etc/modprobe.d/*.conf files.</li> <li><code>-q</code> : Quiet mode, suppressing error messages.</li> <li><code>-v</code> : Verbose mode, providing more detailed information about the loading or unloading process.</li> <li><code>-t</code> : Test mode, simulating the loading or unloading of a module without actually doing so. Example: modprobe -r bluetooth removes the Bluetooth module.</li> </ul>"},{"location":"Commands/#lspci","title":"<code>lspci</code>","text":"<p>Purpose : lspci is used to list and gather information about PCI buses and devices.</p>"},{"location":"Commands/#flags_2","title":"Flags:","text":"<ul> <li><code>-t</code> : Tree-like output, showing the hierarchical structure of PCI devices.</li> <li><code>-v</code> : Verbose mode, providing detailed information about each device.</li> <li><code>-vv</code> : More verbose mode, including configuration registers and interrupt lines.</li> <li><code>-vvv</code>: Extremely verbose mode, including low-level details.</li> <li><code>-m</code> : Machine-readable output, suitable for scripting or processing.</li> </ul>"},{"location":"Commands/#linux-installation-and-package-management","title":"LINUX INSTALLATION AND PACKAGE MANAGEMENT","text":""},{"location":"Commands/#dpkg","title":"<code>dpkg</code>","text":"<p>Purpose : package manager for Debian</p>"},{"location":"Commands/#flags_3","title":"Flags:","text":"<ul> <li><code>-i</code> : Install a package (e.g., dpkg -i package.deb)</li> <li><code>-r</code> : Remove a package (e.g., dpkg -r package)</li> <li><code>-L</code> : List the contents of an installed package (e.g., dpkg -L package)</li> <li><code>-S</code> : Search for a file belonging to a package (e.g., dpkg -S /path/to/file)</li> <li><code>--contents</code> : Show the contents of a package file (e.g., dpkg --contents package.deb)</li> <li><code>--install</code> : Install a package with options (e.g., dpkg --install --force-overwrite package.deb)</li> </ul>"},{"location":"Commands/#apt","title":"<code>apt</code>","text":"<p>Purpose : package manager for Debian</p>"},{"location":"Commands/#flags_4","title":"Flags:","text":"<p><code>-f</code> : Force installation or removal of a package (e.g., apt install -f package) <code>-o</code> : Override configuration options (e.g., apt install -o APT::Get::Force-Yes=true package) <code>-q</code> : Quiet mode (e.g., apt install -q package) <code>-s`` : Simulation mode (e.g., apt install -s package)</code>-y<code>: Assume yes to prompts (e.g., apt install -y package)</code>--fix-broken``` : Fix broken dependencies (e.g., apt install --fix-broken)</p>"},{"location":"Commands/#yum","title":"<code>yum</code>","text":"<p>Purpose : Package management system for RPM-based Linux distributions, such as Red Hat Enterprise Linux (RHEL), CentOS, and Fedora.</p>"},{"location":"Commands/#flags_5","title":"Flags:","text":"<ul> <li><code>-y</code> : Assume yes to prompts (e.g., yum install -y package)</li> <li><code>-q</code> : Quiet mode (e.g., yum install -q package)</li> <li><code>--skip-broken</code> : Skip packages with broken dependencies (e.g., yum install --skip-broken package)</li> <li><code>--enablerepo</code> : Enable a specific repository (e.g., yum install --enablerepo=epel package)</li> <li><code>--disablerepo</code> : Disable a specific repository (e.g., yum install --disablerepo=epel package)</li> <li><code>--setopt</code> : Set a configuration option (e.g., yum install --setopt=tsflags=nodocs package)</li> </ul>"},{"location":"Commands/#dnf","title":"<code>dnf</code>","text":"<p>Purpose : Next-generation package manager for RPM-based Linux distributions, replacing YUM as the default package manager in Fedora and other RHEL-based systems.</p>"},{"location":"Commands/#flags_6","title":"Flags:","text":"<ul> <li><code>-y</code> : Assume yes to prompts (e.g., dnf install -y package)</li> <li><code>-q</code> : Quiet mode (e.g., dnf install -q package)</li> <li><code>--skip-broken</code> : Skip packages with broken dependencies (e.g., dnf install --skip-broken package)</li> <li><code>--enablerepo</code> : Enable a specific repository (e.g., dnf install --enablerepo=epel package)</li> <li><code>--disablerepo</code> : Disable a specific repository (e.g., dnf install --disablerepo=epel package)</li> <li><code>--allow-erasing</code> : Allow erasing of installed packages to resolve dependencies (e.g., dnf install --allow-erasing package)</li> </ul>"},{"location":"Commands/#zypper","title":"<code>zypper</code>","text":"<p>Purpose : Package manager for openSUSE and SUSE Linux Enterprise distributions, as well as other RPM-based systems.</p>"},{"location":"Commands/#flags_7","title":"Flags:","text":"<ul> <li><code>-n</code> : Non-interactive mode (e.g., zypper install -n package)</li> <li><code>-q</code> : Quiet mode (e.g., zypper install -q package)</li> <li><code>--force</code> : Force installation or removal of a package (e.g., zypper install --force package)</li> <li><code>--clean</code> : Clean up package cache (e.g., zypper clean)</li> <li><code>--refresh</code> : Refresh package metadata (e.g., zypper refresh)</li> <li><code>--from</code> : Specify a repository to install from (e.g., zypper install --from=home:username:repo package)</li> </ul>"},{"location":"Commands/#gnu-and-unix-commands","title":"GNU AND UNIX COMMANDS","text":""},{"location":"Commands/#rm-remove","title":"<code>rm</code> (Remove)","text":"<p>Purpose: Delete files and directories</p>"},{"location":"Commands/#flags_8","title":"Flags:","text":"<ul> <li><code>-i</code>: Interactive mode, prompting for confirmation before deleting each file.</li> <li><code>-r</code>: Recursive deletion, removing directories and their contents.</li> <li><code>-f</code>: Force deletion, skipping prompts and errors.</li> <li><code>-v</code>: Verbose mode, displaying file names as they are deleted.</li> <li><code>-d</code>: Delete directories only, without prompting for confirmation. Example: rm -r /path/to/directory deletes the directory and its contents recursively</li> </ul>"},{"location":"Commands/#ls-list","title":"<code>ls</code> (List)","text":"<p>Purpose: Display file and directory information</p> <p>Flags:</p> <ul> <li><code>-l</code>: Long format, displaying detailed file information.</li> <li><code>-a</code>: Show all files, including hidden ones.</li> <li><code>-t</code>: Sort files by time, with newest first.</li> <li><code>-r</code>: Recursively list directory contents.</li> <li><code>-d</code>: List directories only, without listing their contents. Example: ls -l /path/to/directory shows detailed information about files and directories in the specified path</li> </ul>"},{"location":"Commands/#uname-unix-name","title":"<code>uname</code> (Unix Name)","text":"<p>Purpose: Display system information</p> <p>Flags:</p> <ul> <li><code>-a or --all</code>: Display all system information, including kernel version, OS, and hardware architecture.</li> <li><code>-m or --nodename</code>: Display the network name of the machine.</li> <li><code>-n or --hostname</code>: Display the hostname of the machine.</li> <li><code>-r or --release</code>: Display the kernel release version.</li> <li><code>-s or --sysname</code>: Display the operating system name. Example: uname -a displays all system information</li> </ul>"},{"location":"Commands/#kill","title":"<code>kill</code>","text":"<p>Purpose: Send a signal to terminate a process</p> <p>Flags:</p> <ul> <li><code>-9 (SIGKILL)</code>: Send a SIGKILL signal to terminate a process immediately</li> <li><code>-15 (SIGTERM)</code>: Send a SIGTERM signal to terminate a process gracefully</li> <li><code>-HUP (SIGHUP)</code>: Send a SIGHUP signal to restart a process</li> <li><code>-INT (SIGINT)</code>: Send a SIGINT signal to interrupt a process</li> <li><code>-USR1 (SIGUSR1)</code>: Send a SIGUSR1 signal to a process Example: kill -9  terminates a process immediately"},{"location":"Commands/#job","title":"<code>job</code>","text":"<p>Purpose: Manage jobs (background processes) in the shell</p> <p>Flags:</p> <ul> <li><code>-l (list)</code>: List all jobs</li> <li><code>-r (remove)</code>: Remove a job by its job number</li> <li><code>-s (suspend)</code>: Suspend a job</li> <li><code>-t (terminate)</code>: Terminate a job</li> <li><code>-x (exit)</code>: Exit a job Example: job -l lists all running jobs</li> </ul>"},{"location":"Commands/#devices-linux-filesystems-filesystem-hierarchy-standard","title":"Devices, Linux Filesystems, Filesystem Hierarchy Standard","text":""},{"location":"Commands/#lsblk","title":"<code>lsblk</code>","text":"<p>Purpose: lists information about all available or the specified block devices.</p>"},{"location":"Commands/#flags_9","title":"Flags:","text":"<ul> <li><code>-a, --all</code>: Also list empty devices and RAM disk devices.</li> <li><code>-b, --bytes</code>: Print the SIZE column in bytes rather than in a human-readable format.</li> <li><code>-f, --fs</code>: Output info about filesystems.</li> <li><code>-l, --list</code>: Produce output in the form of a list.</li> <li><code>-p, --paths</code>: Print full device paths.</li> </ul>"},{"location":"Commands/#mkfs","title":"<code>mkfs</code>","text":"<p>Purpose: is used to build a Linux filesystem on a device, usually a hard disk partition.</p>"},{"location":"Commands/#flags_10","title":"Flags:","text":"<ul> <li><code>-t, --type</code> : Specify the type of filesystem to be built. If not specified, the default filesystem type (ext2) is used.</li> <li><code>-F</code>: Force the creation of a filesystem on the target device even if a filesystem is detected on it.</li> <li><code>-c</code> : Checks the target device for bad blocks before creating the filesystem.</li> <li><code>-n</code> : This is a truly useful option that simulates the creation of the filesystem, and displays what would be done if executed without the n option.</li> <li><code>-q</code> : Quiet mode. mke2fs will run normally, but will not produce any output to the terminal.</li> </ul>"},{"location":"Commands/#du","title":"<code>du</code>","text":"<p>Purpose: estimate file space usage.</p>"},{"location":"Commands/#flags_11","title":"Flags:","text":"<ul> <li><code>-a, --all</code> : write counts for all files, not just directories.</li> <li><code>-h, --human-readable</code> : print sizes in human readable format (e.g., 1K 234M 2G)</li> <li><code>-c, --total</code> : produce a grand total.</li> <li><code>-S, --separate-dirs</code> : for directories do not include size of subdirectories.</li> <li><code>--inodes</code> : list inode usage information instead of block usage.</li> </ul>"},{"location":"Commands/#df","title":"<code>df</code>","text":"<p>Purpose: displays the amount of disk space available on the already mounted file systems.</p>"},{"location":"Commands/#flags_12","title":"Flags:","text":"<ul> <li><code>-a, --all</code>: includes all file systems even inaccessible ones.</li> <li><code>-i, --inodes</code>: list inode information instead of block usage</li> <li><code>-h, --human-readable</code>: print sizes in human readable format.</li> <li><code>-t, --type=TYPE</code>: limit listing to file systems of type TYPE.</li> <li><code>-T, --print-type</code> :     print file system type.</li> </ul>"},{"location":"Commands/#mount","title":"<code>mount</code>","text":"<p>Purpose : mount a filesystem.</p> <p>Flag:</p> <ul> <li><code>-a</code>: Mounts all file systems listed in /etc/fstab.</li> <li><code>-l</code> : Lists all the file systems mounted and adds labels to each device.</li> <li><code>-r</code> : Mounts the file system in read-only mode.</li> <li><code>-t</code> : Indicates the file system type.</li> <li><code>-v</code> : Mounts verbosely, describing each operation.</li> </ul> <p>## SHELL AND SHELL SCRIPTING</p> <ol> <li> </li> </ol> <p>The source command (or .) is used to execute commands from a file in the current shell session. It is commonly used to load shell scripts or configurations.  Flags:</p> <p>&lt; filename &gt;: Specifies the file to source and execute in the current shell.</p> <ul> <li><code>-</code>: Negates the effect of an alias (if used with a command).</li> <li><code>-x</code>: Enables a trace of   </li> <li><code>-v</code> : Prints each command before executing it (similar to -x, but without showing expanded arguments).</li> <li><code>-c</code> : Executes commands given as an argument, but in a new shell.</li> </ul> <p>Example:</p> <p>source ~/.bashrc  # Loads the user's bash configuration file</p> <ol> <li> </li> </ol> <p>The env command is used to display or set environment variables temporarily.         Flags:    - <code>-i</code>: Starts with a completely clean environment (no inherited variables).</p> <ul> <li> <p><code>&lt;VAR=value&gt;</code>: Temporarily sets an environment variable for the command that follows.</p> </li> <li> <p><code>-u</code>: Unsets an environment variable (e.g., env -u VAR).         <code>-0</code>: Use null characters instead of newlines when displaying environment variables (useful for script processing).</p> </li> <li> <p><code>-</code>: Lists all the environment variables.</p> </li> </ul> <p>Example:</p> <p>env VAR=value command  # Temporarily set VAR for command execution</p> <ol> <li> </li> </ol> <p>The set command is used to set or unset shell options and positional parameters.         Flags:     - <code>-o</code> option: Sets shell options (e.g., -o nounset to treat unset variables as errors).     - <code>+o</code> option: Unsets a shell option.     - <code>-x</code>: Enable tracing, which prints commands as they are executed (for debugging).     - <code>-e</code>: Exit immediately if a command exits with a non-zero status.     - <code>--</code>: End option processing (useful when filenames start with a hyphen).</p> <p>Example: set -e  # Exit immediately if a command fails</p> <ol> <li> </li> </ol> <p>The export command is used to set environment variables, making them available to child processes.         Flags:     - <code>&lt;VAR=value&gt;</code>: Sets the environment variable VAR to value and exports it.     - <code>-p</code>: Displays all environment variables that are marked for export.     - <code>&lt;VAR&gt;</code>: Exports an already defined variable without changing its value.     - <code>-f</code>: Export functions (in Bash, to make them available in subshells).     - <code>--help</code>: Displays help information about the export command.</p> <p>Example:</p> <p>export PATH=\"$PATH:/new/path\"  # Adds a new directory to PATH</p> <ol> <li> </li> </ol> <p>The unset command is used to remove variables or functions from the shell environment.         Flags:     - <code>&lt;VAR&gt;</code>: Unsets a variable, removing it from the shell environment.     - <code>-f</code> : Unsets a function definition.     - <code>-v</code> : Unsets a variable (same as without the -v flag).     - <code>--help</code>: Displays help information.     - <code>--</code>: End option processing for variable names that might start with a dash. <p>Example:</p> <p>unset VAR  # Removes the variable VAR</p>"},{"location":"Commands/#source-or-execute-commands-from-a-file","title":"<code>source</code> (or .) - Execute Commands from a File.","text":""},{"location":"Commands/#env-display-or-set-environment-variables","title":"<code>env</code> - Display or Set Environment Variables","text":""},{"location":"Commands/#set-set-or-unset-shell-options-and-positional-parameters","title":"<code>set</code> - Set or Unset Shell Options and Positional Parameters","text":""},{"location":"Commands/#export-set-environment-variables","title":"<code>export</code> - Set Environment Variables","text":""},{"location":"Commands/#unset-remove-variables-or-functions","title":"<code>unset</code>- Remove Variables or Functions","text":""},{"location":"Commands/#user-interface-and-desktops","title":"User Interface and Desktops","text":"<p>The xrandr command is used to set screen resolution, rotation, and display layout for X Window System displays.         Flags:     - ```--output : Specifies the display/output to configure (e.g., --output HDMI-1).     - --mode : Sets the resolution for the specified display (e.g., --mode 1920x1080).     - --rotate : Rotates the display (options: normal, left, right, inverted).     - --brightness : Adjusts brightness (range from 0.0 to 1.0).     - --off: Disables the specified output. <p>Example: xrandr --output HDMI-1 --mode 1920x1080 --rotate normal</p> <p>xdotool allows automation of mouse and keyboard actions in X Window System environments. It\u2019s useful for simulating user interactions with the desktop.   - key &lt;'keysequence'&gt; : Simulates pressing keys (e.g., xdotool key Ctrl+Alt+T to open a terminal)   </p> <ul> <li> <p>mousemove &lt;'x'&gt; &lt;'y'&gt; Moves the mouse pointer to specified coordinates.</p> </li> <li> <p>click button&gt; :Simulates a mouse click (e.g., click 1 for left-click).</p> </li> <li> <p>type &lt;'text'&gt;: Types out the specified text as if from the keyboard.</p> </li> <li> <p>windowmove &lt; 'window' &gt; &lt;'x'&gt; &lt;'y'&gt;: Moves a window to specific coordinates.</p> </li> </ul> <p>Example: xdotool key Alt+Tab switches between open applications.</p> <ol> <li> </li> </ol> <p>The gsettings command is used for configuring GNOME desktop settings and is useful for modifying desktop, window, and appearance configurations.         Flags:     - <code>get</code> : Retrieves the current value of a GNOME setting.     - <code>set</code> : Sets a value for a GNOME setting.     - <code>list</code>-schemas: Lists all available schemas (i.e., setting categories).     - <code>list</code>-keys : Lists all available keys for a given schema.     - <code>reset</code> : Resets a setting to its default value. <p>Example: gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-dark' changes the GTK theme.</p> <ol> <li> </li> </ol> <p>xkill is a command used to forcefully close unresponsive windows in X Window environments. It terminates the X server connection to the specified client.     - (no flags): Starts xkill in interactive mode, where you click the window you want to kill.     - <code>-id</code> : Kills a window by specifying its window ID.     - <code>-all</code>: Kills all clients (use with caution, as this ends the X session).     - <code>-display</code> : Specifies the display on which to run xkill.     - <code>--help</code>: Displays help information about the command. <p>Example: xkill -id 0x04000007 kills a window by its ID.</p> <ol> <li> </li> </ol> <p>The wmctrl command is used for controlling windows and interacting with the window manager. This command is useful for managing open windows on the deskto         Flags:     - <code>-l</code>: Lists all open windows with details such as window ID and title.     - <code>-c</code> : Closes a specified window.     - <code>-r</code>  -e : Resizes and moves a window to specified geometry (e.g., 0,100,100,400,300).     - <code>-s</code> : Switches to a specified workspace.     - <code>-a</code> : Activates (focuses) a window with the specified title. <p>Example: wmctrl -r \"Terminal\" -e 0,100,100,800,600 moves and resizes a terminal window.</p>"},{"location":"Commands/#xrandr-configure-and-set-display-properties","title":"<code>xrandr</code> - Configure and Set Display Properties","text":""},{"location":"Commands/#xdotool-simulate-keyboard-and-mouse-input","title":"<code>xdotool</code> - Simulate Keyboard and Mouse Input","text":""},{"location":"Commands/#gsettings-configure-gnome-settings","title":"<code>gsettings</code> - Configure GNOME Settings","text":""},{"location":"Commands/#xkill-forcefully-close-a-window","title":"<code>xkill</code> - Forcefully Close a Window","text":""},{"location":"Commands/#wmctrl-interact-with-window-manager","title":"<code>wmctrl</code> - Interact with Window Manager","text":""},{"location":"Commands/#networking-fundamentals","title":"NETWORKING FUNDAMENTALS","text":""},{"location":"Commands/#ping","title":"<code>ping</code>","text":"<p>\u2022   Purpose: Tests connectivity between devices by sending ICMP packets. Flags: - <code>-c</code> [count]: Specify the number of packets to send. - <code>-i</code> [interval]: Set the interval between packets (in seconds). - <code>-s</code> [size]: Specify the packet size. - <code>-t</code> [TTL]: Set Time-to-Live for the packets. - <code>-q</code>: Quiet output (only summary).</p>"},{"location":"Commands/#ifconfig-linux-ipconfig-windows","title":"<code>ifconfig</code> (Linux) / ipconfig (Windows)","text":"<p>\u2022   Purpose: Displays or configures network interface settings. Flags for ifconfig: - <code>up</code>: Activates the network interface. - <code>down</code>: Deactivates the network interface. - <code>-a</code>: Display all interfaces, even inactive ones. - <code>netmask</code> [address]: Set a netmask for the interface. - <code>mtu</code> [size]: Set the Maximum Transmission Unit size.</p>"},{"location":"Commands/#netstat","title":"<code>netstat</code>","text":"<p>\u2022   Purpose: Displays network connections, routing tables, and interface statistics.  Flags: - <code>-a</code>: Show all active connections and listening ports. - <code>-n</code>: Show addresses numerically. - <code>-r</code>: Display the routing table. - <code>-t</code>: Show only TCP connections. - <code>-u</code>: Show only UDP connections.</p>"},{"location":"Commands/#traceroute-linux-tracert-windows","title":"<code>traceroute</code> (Linux) / tracert (Windows)","text":"<p>\u2022   Purpose: Shows the path packets take to reach a destination.  Flags: - <code>-m</code> [max_ttl]: Set the maximum number of hops. - <code>-q</code> [queries]: Specify the number of queries per hop. - <code>-w</code> [timeout]: Set the timeout per probe. - <code>-f</code> [first_ttl]: Set the starting TTL. - <code>-I</code>: Use ICMP echo requests instead of UDP packets.</p>"},{"location":"Commands/#nslookup","title":"<code>nslookup</code>","text":"<p>\u2022   Purpose: Queries DNS to obtain domain name or IP address mapping. Flags: - <code>-type</code>=[record_type]: Specify the DNS record type (A, MX, NS, etc.). - <code>-timeout</code>=[seconds]: Set the timeout for a DNS query. - <code>-retry</code>=[attempts]: Number of times to retry a failed query. - <code>-debug</code>: Show detailed output of the DNS response. - <code>-port</code>=[port]: Specify the DNS server port (default is 53).</p>"},{"location":"Commands/#security","title":"SECURITY","text":""},{"location":"Commands/#ssh-secure-shell","title":"<code>ssh</code> (Secure Shell)","text":"<p>\u2022   Purpose: Establishes a secure connection to a remote machine.     Flags: - <code>-p [port]</code>: Specify the port to connect to. - <code>-i [identity_file]</code>: Specify the identity file (private key) for authentication. - <code>-C</code>: Enable compression to speed up data transfer. - <code>-v</code>: Enable verbose mode for debugging. - <code>-L [local_port:remote_host:remote_port]</code>: Set up port forwarding.</p>"},{"location":"Commands/#iptables-linux-firewall","title":"<code>iptables</code> (Linux firewall)","text":"<p>\u2022   Purpose: Configures rules for traffic filtering and network packet control. Flags: - <code>-A [chain]</code>: Append a rule to a specified chain (INPUT, OUTPUT, FORWARD). - <code>-D [chain]</code>: Delete a rule from a specified chain. - <code>-I [chain] [rule_number]</code>: Insert a rule at a specific position in a chain. - <code>-j [target]</code>: : Specify the target action (ACCEPT, DROP, REJECT).     - <code>-s</code> [source]: Specify the source IP address.</p>"},{"location":"Commands/#openssl","title":"<code>openssl</code>","text":"<p>\u2022   Purpose: Manages SSL/TLS encryption, creates keys, certificates, and performs cryptographic operations.     Flags: - <code>genrsa</code>: Generate an RSA private key. - <code>req -new</code>: Create a new certificate signing request (CSR).     - <code>x509 -in [file]</code>: Convert a certificate to X.509 format.     - <code>-aes256</code>: Specify AES-256 encryption for key generation.     - <code>-verify</code>: Verify an SSL certificate.</p>"},{"location":"Commands/#nmap-network-mapper","title":"<code>nmap</code> (Network Mapper)","text":"<p>\u2022   Purpose: Scans networks for open ports and services; useful for vulnerability assessment. \u2022 #### Flags:     - <code>-sS</code>: Perform a stealth (SYN) scan.     - <code>-p</code> [port_range]: Specify a range of ports to scan.     - <code>-O</code>: Detect the operating system of the target.     - <code>-A</code>: Enable OS detection, version detection, script scanning, and traceroute.     - <code>-v</code>: Enable verbose output.</p>"},{"location":"Commands/#chmodchange-mode","title":"<code>chmod</code>(Change Mode)","text":"<p>\u2022   Purpose: Modifies file and directory permissions, enhancing file security. Flags:     - <code>-R</code>: Apply permissions recursively to all files and directories.     - <code>+x</code>: Add execute permissions.     - <code>+w</code>: Add write permissions.     - <code>+r</code>: Add read permissions.     - <code>--reference=[file]</code>: Use another file\u2019s permissions as a reference.</p>"},{"location":"Commands/#administrative-tasks","title":"ADMINISTRATIVE TASKS","text":"<p># ESSENTIAL SYSTEM SERVICES</p> <p>\u2022   Purpose: Schedules recurring tasks or jobs on the system.     Flags:</p> <ul> <li> <p><code>-e</code>: Edit the cron jobs for the current user.</p> <ul> <li><code>-l</code>: List all cron jobs for the current user.</li> <li><code>-r</code>: Remove all cron jobs for the current user.</li> <li><code>-u</code> [user]: Specify a user to manage cron jobs for (requires sudo).  <ul> <li><code>-i</code>: Prompt before deleting cron jobs.</li> </ul> </li> </ul> </li> <li> </li> </ul> <p>\u2022   Purpose: Displays network connections, routing tables, and network interface statistics.     Flags:     - <code>-a</code>: Show all active connections and listening ports.     - <code>-t</code>: Display only TCP connections.     - <code>-u</code>: Display only UDP connections.     - <code>-l</code>: Show only listening ports.     - <code>-p</code>: Show PID and program name associated with each connection.</p> <ol> <li> </li> </ol>"},{"location":"Commands/#ps-process-status","title":"<code>ps</code> (Process Status)","text":"<p>\u2022   Purpose: Displays information about active processes.    Flags:     - <code>-e</code>: Show all processes.     - <code>-f</code>: Full-format listing with more details. - <code>-u [user]</code>: Show processes for a specific user.     - <code>-aux</code>: Show all processes from all users, including root.     - <code>-o [format]</code>: Specify output format (e.g., pid, user, %cpu).</p>"},{"location":"Commands/#top","title":"<code>top</code>","text":"<p>\u2022   Purpose: Real-time display of active processes and resource usage.  Flags:      - <code>-d</code> [seconds]: Set the delay between screen updates.      - <code>-u</code> [user]: Show processes for a specific user.      - <code>-p</code> [pid]: Monitor a specific process by PID.      - <code>-n</code> [count]: Specify the number of updates before exiting.      - <code>-b</code>: Batch mode for non-interactive output (good for logging).</p>"},{"location":"Commands/#kill_1","title":"<code>kill</code>","text":"<p>\u2022   Purpose: Terminates processes by PID.  Flags:     - <code>-9</code>: Forcefully kill a process (SIGKILL).     - <code>-15</code>: Gracefully terminate a process (SIGTERM, default).     - <code>-l</code>: List all available signal types.     -  <code>-s</code> [signal]: Specify a signal to send to the process.     -  <code>-p</code>: Print the process ID without sending a signal.</p>"},{"location":"Commands/#systemctl-system-control","title":"<code>systemctl</code> (System Control)","text":"<p>\u2022   Purpose: Controls and manages system services and units.    Flags: - <code>start [service]</code>: Start a specified service. - <code>stop [service]</code>: Stop a specified service. - <code>restart [service]</code>: Restart a specified service. - <code>status [service]</code>: Show the status of a specified service. - <code>enable [service]</code>: Enable a service to start on boot.</p>"},{"location":"Commands/#crontab","title":"<code>crontab</code>","text":"<p>\u2022   Purpose: Schedules recurring tasks or jobs.   Flags :     - <code>-e</code>: Edit the current user\u2019s cron jobs. - <code>-l</code>: List all cron jobs for the current user. - <code>-r</code>: Remove all cron jobs for the current user. - <code>-u</code> [user]: Specify a user for which to list, edit, or remove jobs (requires sudo). - <code>-i</code>: Prompt before deleting the user\u2019s cron jobs.</p>"},{"location":"Commands/#systemctl-systemd-control","title":"<code>systemctl</code> (Systemd Control)","text":"<p>\u2022   Purpose: Controls and manages services and units in systems using systemd. Flags: - <code>start [service]</code>: Start a specified service. - <code>stop [service]</code>: Stop a specified service. - <code>restart [service]</code>: Restart a specified service. - <code>status [service]</code>: Show the status of a specified service. - <code>enable [service]</code>: Enable a service to start at boot.</p>"},{"location":"Commands/#service-legacy-service-management","title":"<code>service</code> (Legacy Service Management)","text":"<p>\u2022   Purpose: Starts, stops, or restarts services, mainly used on older Linux systems.    Flags: - <code>start [service]</code>: Start a specified service. - <code>stop [service]</code>: Stop a specified service. - <code>restart [service]</code>: Restart a specified service. - <code>status [service]</code>: Show the status of a specified service. - <code>reload [service]</code>: Reload the configuration of a running service.</p>"},{"location":"Commands/#journalctl-systemd-journal","title":"<code>journalctl</code> (Systemd Journal)","text":"<p>\u2022   Purpose: Views and manages logs created by systemd\u2019s journaling service.   Flags: - <code>-u [service]</code>: Show logs for a specific service. - <code>-f</code>: Follow log output in real time. - <code>-p [priority]</code>: Filter logs by priority (e.g., err, warn, info). - <code>--since [time]</code>: Display logs since a specific time. - <code>--until [time]</code>: Display logs until a specific time.</p>"},{"location":"Commands/#chkconfig-service-configuration","title":"<code>chkconfig</code> (Service Configuration)","text":"<p>\u2022   Purpose: Manages runlevel settings for services on older Linux systems. Flags:     - <code>--list</code>: List all services and their runlevel settings.     - <code>--add [service]</code>: Add a service to chkconfig management.     - <code>--del [service]</code>: Remove a service from chkconfig management.     - <code>--level [levels]</code>: Specify runlevels for the service.     - <code>[service] on|off</code>: Enable or disable a service at boot.</p>"},{"location":"Commands/#update-rcd-service-runlevel-management","title":"<code>update-rc.d</code> (Service Runlevel Management)","text":"<p>\u2022   Purpose: Configures service start and stop behavior on Debian-based systems. Flags: - <code>defaults</code>: Enable default start and stop links for a service. - <code>remove</code>: Remove a service from the startup list. - <code>[service]</code> disable: Disable a specified service. - <code>[service] enable</code>: Enable a specified service.     - <code>[service] start [level]</code>: Start the service at a specified runlevel.</p>"},{"location":"Commands/#crontab-cron-job-scheduler","title":"<code>crontab</code> (Cron Job Scheduler)","text":""},{"location":"Commands/#netstat-network-statistics","title":"<code>netstat</code> (Network Statistics)","text":""},{"location":"Commands/#ntpdate-network-time-protocol","title":"<code>ntpdate</code> (Network Time Protocol)","text":"<p>\u2022   Purpose: Synchronizes the system clock with NTP servers.   Flags: - <code>-u</code>: Use an unprivileged port for outgoing connections. - <code>-q</code>: Query time server without setting the clock. - <code>-b</code>: Forcefully reset the time, using step rather than slew.     _ <code>-d</code>: Enable debugging output. - [server]: Specify the NTP server to use for synchronization.</p>"},{"location":"File_systems/","title":"FILE SYSTEMS","text":""},{"location":"File_systems/#introduction-to-disk-partitioning","title":"Introduction to Disk Partitioning","text":"<p>In any operating system, before data can be stored on a disk, the disk must be partitioned. A partition is a logical subset of the physical disk. Information about the partitions is stored in the partition table, which includes details about the start and end sectors, as well as the type of each partition.</p>"},{"location":"File_systems/#partitioning-systems","title":"Partitioning Systems","text":"<ol> <li>Master Boot Record (MBR):</li> <li>Location: Stored at the very beginning of a storage device.</li> <li> <p>Limitations:</p> <ul> <li>It can only have 4 primary partitions or 3 primary partitions and 1 extended partition.</li> <li>It can't address disks larger than 2TB.</li> </ul> </li> <li> <p>GUID Partition Table (GPT):</p> </li> <li>Improvement: GPT resolves many of MBR's limitations.</li> <li>Features:<ul> <li>Supports disks up to 64TB.</li> <li>Allows an almost unlimited number of partitions (128 partitions on Windows).</li> </ul> </li> <li>Used in UEFI standard.</li> </ol>"},{"location":"File_systems/#disk-partitioning-in-linux","title":"Disk Partitioning in Linux","text":"<p>Each partition in Linux is assigned a directory under <code>/dev/</code>. For example, <code>/dev/sda1</code> is the first partition of the first hard disk, and the naming convention follows for other devices. Linux uses fdisk and gdisk utilities for managing MBR and GPT partitions, respectively.</p>"},{"location":"File_systems/#fdisk-mbr","title":"fdisk (MBR)","text":"<ul> <li>Used to manage MBR partitions.</li> <li>Common commands:</li> <li><code>fdisk</code>: Enter partition utility.</li> <li><code>lsblk</code>: List block devices.</li> <li><code>fdisk /dev/sda</code>: Start managing partitions for the first hard disk.</li> <li><code>(P)</code>: List partition table.</li> <li><code>(n)</code>: Create a new partition.</li> <li><code>(d)</code>: Delete a partition.</li> </ul>"},{"location":"File_systems/#gdisk-gpt","title":"gdisk (GPT)","text":"<ul> <li>Main utility for GPT partitions.</li> <li>Commands:</li> <li><code>gdisk /dev/sda</code>: Start managing GPT partitions.</li> <li><code>n</code>: Create a new partition.</li> <li><code>p</code>: Print partition table.</li> <li><code>d</code>: Delete a partition.</li> </ul>"},{"location":"File_systems/#filesystem-and-filesystem-types","title":"Filesystem and Filesystem Types","text":"<p>A filesystem defines how data is stored and retrieved from a storage device.</p> <ul> <li>FAT (File Allocation Table): Common for USB drives and memory cards.</li> <li>NTFS (New Technology File System): Supports large files, encryption, file permissions, and journaling.</li> <li>EXT (Extended File System): Used in Linux systems with versions such as EXT2, EXT3, and EXT4 (EXT4 is the most widely used).</li> </ul>"},{"location":"File_systems/#creating-a-filesystem-in-linux","title":"Creating a Filesystem in Linux:","text":"<ul> <li><code>mkfs.ext4 /dev/sda1</code>: Creates an EXT4 filesystem on the first partition of the first hard disk.</li> <li><code>mount</code>: Used to mount a filesystem. For example, <code>mount /dev/sda1 /mnt</code> mounts the partition to <code>/mnt</code>.</li> <li><code>cat /proc/self/mountinfo</code>: View detailed mount information.</li> </ul>"},{"location":"File_systems/#making-a-swap-for-virtual-memory","title":"Making a Swap (for Virtual Memory)","text":"<ul> <li><code>mkswap /dev/sda1</code>: Creates a swap space.</li> <li><code>swapon /dev/sda1</code>: Activates the swap.</li> </ul>"},{"location":"File_systems/#maintaining-filesystem-integrity","title":"Maintaining Filesystem Integrity","text":"<ul> <li><code>du -h</code>: Shows disk usage in a human-readable format.</li> <li><code>df -i</code>: Shows inode usage.</li> <li><code>fsck</code>: Check and repair a filesystem.</li> </ul>"},{"location":"File_systems/#file-permissions-and-ownership","title":"File Permissions and Ownership","text":"<p>In Linux, every file or directory has associated permissions and ownership.</p> <ol> <li>Permissions: Control who can read, write, and execute a file.</li> <li>umask: Sets default permissions for new files.</li> <li>chmod: Modify permissions (e.g., <code>chmod u+x file</code>).</li> <li>chown: Change ownership of a file (e.g., <code>sudo chown user:group file</code>).</li> <li> <p>chgrp: Change the group ownership of a file (e.g., <code>chgrp group file</code>).</p> </li> <li> <p>Types of Links:</p> </li> <li>Hard Links: Multiple entries in the filesystem pointing to the same data block (inode) on the disk.</li> <li>Symbolic Links (Symlinks): Pointers to the path of another file.</li> </ol>"},{"location":"File_systems/#directory-structure-in-linux","title":"Directory Structure in Linux","text":"<ul> <li><code>/</code>: The root directory, everything is contained within it.</li> <li><code>/bin</code>: Essential binaries for all users.</li> <li><code>/boot</code>: Files required for booting.</li> <li><code>/dev</code>: Device files representing hardware (e.g., <code>/dev/sda</code> for disks).</li> <li><code>/home</code>: User directories for personal files.</li> <li><code>/lib</code>: Shared libraries required for booting and running binaries under <code>/bin</code>.</li> <li><code>/media</code>: Mounted external devices.</li> <li><code>/mnt</code>: Mount points for temporarily mounted filesystems.</li> <li><code>/opt</code>: Application software packages.</li> <li><code>/root</code>: Superuser's home directory.</li> <li><code>/sbin</code>: System binaries.</li> <li><code>/tmp</code>: Temporary files.</li> </ul>"},{"location":"File_systems/#file-operations","title":"File Operations","text":"<ul> <li>Creating files: <code>touch file.txt</code> creates an empty file.</li> <li>Viewing files: <code>cat file.txt</code> prints the content to the screen.</li> <li>Changing permissions:</li> <li><code>chmod 755 file</code>: Change permissions of a file.</li> <li><code>chmod u+x file.txt</code>: Add execute permission to the user.</li> </ul>"},{"location":"File_systems/#useful-commands-for-file-operations","title":"Useful Commands for File Operations","text":"<ul> <li>chmod: Modify file permissions.</li> <li>chown: Modify file ownership.</li> <li>chgrp: Modify file group ownership.</li> <li>ln -s: Create a symbolic link.</li> <li>ln: Create a hard link.</li> </ul>"},{"location":"File_systems/#examples-of-key-commands","title":"Examples of Key Commands","text":"<ol> <li>Change permissions using chmod:</li> <li><code>chmod u+g+rw-x,o-rwx file.txt</code>: Adds read and write permissions for the user and group, removes all permissions for others.</li> <li> <p><code>ls -l file.txt</code>: Lists the file\u2019s permissions.</p> </li> <li> <p>Change ownership using chown:</p> </li> <li> <p><code>sudo chown user:group file.txt</code>: Change ownership of <code>file.txt</code> to <code>user</code> and group <code>group</code>.</p> </li> <li> <p>Change group ownership using chgrp:</p> </li> <li> <p><code>chgrp group file.txt</code>: Change the group of <code>file.txt</code>.</p> </li> <li> <p>Using <code>getent</code> to see group info:</p> </li> <li><code>getent group</code>: Lists all groups.</li> <li> <p><code>grep \"group_name\" /etc/group</code>: Check if a specific group exists.</p> </li> <li> <p>Pipelining Commands:</p> </li> <li><code>ls -l | grep \"pattern\"</code>: Search for files matching a specific pattern.</li> <li><code>echo \"my name is zara\" &gt; output.txt</code>: Redirects the output to a file.</li> </ol> <p>This provides a thorough understanding of filesystems, partitioning, file management, and key Linux commands related to storage and file permissions. The tools mentioned are essential for handling file structures, partitioning, and the management of disk spaces effectively.</p>"},{"location":"GNU%20%26%20UNIX%20commands/","title":"UNIX COMMANDS","text":""},{"location":"GNU%20%26%20UNIX%20commands/#1-getting-system-information","title":"1. Getting System Information","text":"<ul> <li>pwd: Prints the current working directory.</li> </ul> <p><code>bash   pwd</code></p> <ul> <li>touch: Creates a new file or updates the timestamp of an existing file.</li> </ul> <p><code>bash   touch file.txt        # Create a new file named file.txt   touch -r file1.txt file2.txt  # Set the timestamp of file2.txt to be the same as file1.txt   touch -t 2024122510530 file.txt  # Set a custom timestamp (YYYYMMDDhhmm.ss)</code></p> <ul> <li>uname: Displays information about the system.</li> </ul> <p><code>bash   uname                 # Shows the OS name   uname -m              # Displays machine hardware name   uname -r              # Shows the kernel version   uname -a              # Displays all system information</code></p> <ul> <li>man: Opens the manual pages for a given command.</li> </ul> <p><code>bash   man &lt;command&gt;         # Show the manual for a command</code></p> <ul> <li>apropos: Searches the manual page descriptions for a keyword.</li> </ul> <p><code>bash   apropos &lt;keyword&gt;      # Search for commands related to a keyword</code></p> <ul> <li>type: Gives basic information about a command (e.g., whether it's built-in, a function, or an executable).</li> </ul> <p><code>bash   type &lt;command&gt;</code></p> <ul> <li>which: Displays the location of an executable file for a command.</li> </ul> <p><code>bash   which &lt;command&gt;</code></p>"},{"location":"GNU%20%26%20UNIX%20commands/#2-finding-environment-variables","title":"2. Finding Environment Variables","text":"<ul> <li>env / printenv: Displays environment variables.</li> </ul> <p><code>bash   env</code></p> <ul> <li>echo: Prints text or variable values to the terminal.</li> </ul> <p><code>bash   echo \"Hello, World!\"   echo $PATH</code></p> <ul> <li>export: Sets an environment variable for the current session and any child processes.</li> </ul> <p><code>bash   export MY_VAR=123</code></p> <ul> <li>unset: Unsets or deletes an environment variable.</li> </ul> <p><code>bash   unset MY_VAR</code></p> <ul> <li>set: Displays all environment variables.</li> </ul> <p><code>bash   set</code></p>"},{"location":"GNU%20%26%20UNIX%20commands/#3-working-with-quoting-and-special-characters","title":"3. Working with Quoting and Special Characters","text":"<ul> <li>Single quotes preserve the literal value of all characters.</li> </ul> <p><code>bash   echo '$PATH'  # Output will literally show $PATH</code></p> <ul> <li>Double quotes preserve most characters, but variables and escape sequences are expanded.</li> </ul> <p><code>bash   echo \"$PATH\"  # Output will show the value of PATH</code></p>"},{"location":"GNU%20%26%20UNIX%20commands/#4-redirection-and-pipes","title":"4. Redirection and Pipes","text":"<ul> <li>Redirection:</li> <li> <p><code>&gt;</code>: Redirects output to a file, overwriting the content.</p> <p><code>bash echo \"Hello\" &gt; file.txt  # Writes \"Hello\" to file.txt, overwriting its contents</code></p> </li> <li> <p><code>&gt;&gt;</code>: Appends output to a file.</p> <p><code>bash echo \"World\" &gt;&gt; file.txt  # Appends \"World\" to file.txt</code></p> </li> <li> <p><code>2&gt;</code>: Redirects error output (stderr) to a file.</p> <p><code>bash command 2&gt; error.txt</code></p> </li> <li> <p><code>2&gt;/dev/null</code>: Discards stderr (useful when you don\u2019t care about errors).</p> <p><code>bash command 2&gt;/dev/null</code></p> </li> <li> <p>Pipes (<code>|</code>): Redirects the output of one command as input to another command.</p> </li> </ul> <p><code>bash   ls | grep \"file\"  # List files, then filter to only show those containing \"file\"</code></p> <ul> <li>diff: Compares two files line by line.</li> </ul> <p><code>bash   diff file1.txt file2.txt</code></p> <ul> <li>tee: Reads from stdin and writes to both stdout and a file.</li> </ul> <p><code>bash   echo \"Hello\" | tee file.txt  # Output goes to both terminal and file.txt</code></p>"},{"location":"GNU%20%26%20UNIX%20commands/#5-file-manipulation","title":"5. File Manipulation","text":"<ul> <li>cat: Concatenates and displays the content of a file.</li> </ul> <p><code>bash   cat file.txt</code></p> <ul> <li>head: Displays the first ten lines of a file.</li> </ul> <p><code>bash   head file.txt</code></p> <ul> <li>tail: Displays the last ten lines of a file.</li> </ul> <p><code>bash   tail file.txt</code></p> <ul> <li>nl: Numbers the lines in a file.</li> </ul> <p><code>bash   nl file.txt</code></p> <ul> <li>wc: Counts the number of lines, words, characters, or bytes in a file.</li> </ul> <p><code>bash   wc -l file.txt  # Line count   wc -w file.txt  # Word count   wc -c file.txt  # Byte count</code></p> <ul> <li>cut: Removes sections from each line of files.</li> </ul> <p><code>bash   cut -d':' -f1 file.txt  # Extract first field separated by \":\"</code></p> <ul> <li>uniq: Filters out repeated lines in a file.</li> </ul> <p><code>bash   uniq file.txt</code></p> <ul> <li>tr: Translates or deletes characters.</li> </ul> <p><code>bash   echo \"hello\" | tr 'a-z' 'A-Z'  # Converts lowercase to uppercase</code></p> <ul> <li>split: Splits a file into multiple smaller files.</li> </ul> <p><code>bash   split -l 100 file.txt  # Splits file.txt into 100-line chunks</code></p> <ul> <li>sed: Stream editor for basic text transformations.</li> </ul> <p><code>bash   sed 's/cat/dog/g' file.txt  # Replace all instances of \"cat\" with \"dog\"   sed '/dog/d' file.txt  # Delete all lines containing \"dog\"   sed -n '/cat/p' file.txt  # Print lines containing \"cat\"</code></p>"},{"location":"GNU%20%26%20UNIX%20commands/#6-file-compression","title":"6. File Compression","text":"<ul> <li>gzip: Compresses files using the GZIP algorithm (<code>.gz</code>).</li> </ul> <p><code>bash   gzip file.txt</code></p> <ul> <li>zcat: Displays the contents of a gzipped file without decompressing it.</li> </ul> <p><code>bash   zcat file.txt.gz</code></p> <ul> <li>sha256sum / md5sum: Generates checksums for files.</li> </ul> <p><code>bash   sha256sum file.txt  # Calculates the SHA-256 checksum of file.txt   md5sum file.txt  # Calculates the MD5 checksum</code></p>"},{"location":"GNU%20%26%20UNIX%20commands/#7-file-and-directory-operations","title":"7. File and Directory Operations","text":"<ul> <li>cp: Copies files or directories.</li> </ul> <p><code>bash   cp file1.txt file2.txt</code></p> <ul> <li>mv: Moves or renames files or directories.</li> </ul> <p><code>bash   mv file1.txt newfile.txt</code></p> <ul> <li>mkdir: Creates a new directory.</li> </ul> <p><code>bash   mkdir new_directory</code></p> <ul> <li>rmdir: Removes an empty directory.</li> </ul> <p><code>bash   rmdir empty_directory</code></p> <ul> <li>find: Searches for files in a directory hierarchy.</li> </ul> <p><code>bash   find /path/to/dir -name \"*.txt\"  # Find all .txt files</code></p> <ul> <li>tar: Used to create, extract, or list archive files.</li> </ul> <p><code>bash   tar -cvf archive.tar file1.txt file2.txt  # Create tar archive   tar -xvf archive.tar  # Extract tar archive</code></p> <ul> <li>dd: Low-level copying and conversion of data.</li> </ul> <p><code>bash   dd if=inputfile of=outputfile bs=64K conv=noerror,sync</code></p>"},{"location":"GNU%20%26%20UNIX%20commands/#8-more-redirection","title":"8. More Redirection","text":"<ul> <li>1&gt;: Redirects standard output to a file (same as <code>&gt;</code>).</li> </ul> <p><code>bash   echo \"Hello\" &gt; file.txt</code></p> <ul> <li>&gt;&amp;2: Redirects stdout to stderr.</li> </ul> <p><code>bash   echo \"Error!\" &gt;&amp;2</code></p> <ul> <li>2&gt;/dev/null: Discards stderr output.</li> </ul> <p><code>bash   command 2&gt;/dev/null  # Suppress error output</code></p> <p>These commands are essential tools for Unix/Linux users, especially for managing files, processes, environment variables, and system information.</p>"},{"location":"GNU/","title":"GNU Presentation","text":""},{"location":"GNU/#managing-processes-in-linux","title":"Managing Processes in Linux","text":""},{"location":"GNU/#foreground-and-background-jobs","title":"Foreground and Background Jobs","text":"<p>Linux allows the management of multiple processes concurrently, which is one of its key advantages. You can run different programs and jobs simultaneously, often by sending them to the background.</p> <ul> <li> <p>Running Jobs in the Background: Normally, when you run a program in the terminal, it blocks the terminal until the process completes. To run a command in the background, you can append <code>&amp;</code> at the end of the command. For example:   <code>bash   xeyes &amp; sleep 60 &amp;</code>   This allows you to continue using the terminal while these programs run in the background.</p> </li> <li> <p>Suspending and Resuming Jobs: If a job is running in the foreground, you can:</p> </li> <li>Pause it with <code>Ctrl + Z</code></li> <li>Bring it to the foreground using <code>fg</code></li> <li>Send it to the background using <code>bg</code></li> </ul> <p>You can list all running jobs with the <code>jobs</code> command, and view the Process ID (PID) with <code>jobs -l</code>.</p>"},{"location":"GNU/#useful-commands-for-process-management","title":"Useful Commands for Process Management","text":"<ul> <li> <p>nohup:   The <code>nohup</code> command allows a process to continue running even after the terminal or session is closed. By default, output is written to <code>nohup.out</code>.   <code>bash   nohup command &amp;</code></p> </li> <li> <p>kill:   The <code>kill</code> command sends signals to processes. While <code>Ctrl + C</code> and <code>Ctrl + Z</code> also send signals, <code>kill</code> allows more control:</p> </li> <li>SIGTERM (15): Graceful termination.</li> <li>SIGKILL (9): Forceful termination.</li> </ul> <p>Syntax: <code>bash   kill -9 &lt;PID&gt;  # Force kill a process</code></p> <ul> <li> <p>killall:   The <code>killall</code> command sends signals to all processes by name.   Example:   <code>bash   killall -9 firefox</code></p> </li> <li> <p>pkill:   Similar to <code>killall</code>, but with a more flexible pattern matching approach.   <code>bash   pkill -9 &lt;pattern&gt;</code></p> </li> <li> <p>ps:   The <code>ps</code> command lists running processes.   Example:   <code>bash   ps -ef  # List all processes</code></p> </li> <li> <p>pgrep:   Find processes by name and return their PID:   <code>bash   pgrep &lt;process-name&gt;</code></p> </li> <li> <p>top: <code>top</code> is the go-to tool for live system monitoring. It provides real-time information about system resource usage.</p> </li> </ul> <p>Key Top Commands:   - <code>h</code> for help   - <code>q</code> to quit   - <code>M</code> to sort by memory usage   - <code>k</code> to kill a process</p> <ul> <li> <p>free:   Displays system memory usage, with options for different units:   <code>bash   free -h  # Human-readable format</code></p> </li> <li> <p>uptime:   Shows how long the system has been running, load averages, and logged-in users.</p> </li> <li> <p>watch:   Repeatedly runs a command at specified intervals (default: 2 seconds). Example:   <code>bash   watch free -h</code></p> </li> </ul>"},{"location":"GNU/#terminal-multiplexers","title":"Terminal Multiplexers","text":""},{"location":"GNU/#screen","title":"screen","text":"<p>The <code>screen</code> command allows you to multiplex multiple terminal sessions inside a single terminal window. You can detach and reattach to sessions. Key commands: - <code>Ctrl + A + D</code>: Detach from the current session. - <code>screen -r</code>: Reattach to a session.</p> <p>Other Useful Keybindings: - <code>|</code>: Split the screen vertically. - <code>C</code>: Create a new window. - <code>N</code>: Move to the next window. - <code>K</code>: Kill the current window.</p>"},{"location":"GNU/#tmux","title":"tmux","text":"<p><code>tmux</code> is a more advanced terminal multiplexer, often preferred for its features. After installing, you can use: - <code>Ctrl + B + %</code>: Split the window vertically. - <code>Ctrl + B + \"</code>: Split the window horizontally. - <code>Ctrl + B + D</code>: Detach from the current session.</p> <p>To list and reattach to a session:</p> <pre><code>tmux ls  # List sessions\ntmux attach-session -t &lt;session_name&gt;  # Reattach to a session\n</code></pre>"},{"location":"GNU/#change-process-execution-priorities","title":"Change Process Execution Priorities","text":""},{"location":"GNU/#nice-and-renice","title":"Nice and Renice","text":"<ul> <li> <p>Nice Values:   The <code>nice</code> value determines the priority of a process. The range is from -20 (highest priority) to 19 (lowest priority).</p> </li> <li> <p>Setting Nice Values:   To run a program with a custom priority, use:   <code>bash   nice -n &lt;nice_value&gt; &lt;command&gt;</code></p> </li> <li> <p>Renicing Running Processes:   To change the priority of a running process:   <code>bash   sudo renice -n &lt;nice_value&gt; &lt;PID&gt;</code></p> </li> </ul> <p>Use the <code>top</code> command to monitor process priorities. In the <code>top</code> output, the NI column shows the \"nice\" value.</p>"},{"location":"GNU/#search-text-files-using-regular-expressions","title":"Search Text Files Using Regular Expressions","text":""},{"location":"GNU/#grep-egrep-fgrep-sed-and-regex","title":"grep, egrep, fgrep, sed, and Regex","text":""},{"location":"GNU/#regular-expressions-regex-basics","title":"Regular Expressions (Regex) Basics","text":"<p>Regular expressions are patterns used to match text. For example: - <code>a</code> matches the character 'a'. - <code>.*</code> matches any sequence of characters.</p>"},{"location":"GNU/#regex-metacharacters","title":"Regex Metacharacters","text":"<ul> <li><code>*</code>: Matches 0 or more of the preceding character.</li> <li><code>+</code>: Matches 1 or more of the preceding character.</li> <li><code>?</code>: Matches 0 or 1 of the preceding character.</li> <li><code>{n,m}</code>: Matches between n and m occurrences.</li> <li><code>|</code>: Alternation (OR).</li> <li><code>.</code>: Any single character.</li> </ul>"},{"location":"GNU/#character-classes","title":"Character Classes","text":"<ul> <li><code>\\d</code>: Any digit (0-9).</li> <li><code>\\w</code>: Any word character (alphanumeric + underscore).</li> <li><code>[a-z]</code>: Any lowercase letter.</li> </ul>"},{"location":"GNU/#grep","title":"grep","text":"<p><code>grep</code> is used to search for patterns in files. Key options: - <code>-i</code>: Case-insensitive search. - <code>-v</code>: Invert match. - <code>-n</code>: Show line numbers. - <code>-r</code>: Recursive search.</p>"},{"location":"GNU/#extended-grep","title":"Extended grep","text":"<p>Use <code>egrep</code> or <code>grep -E</code> for extended regex features:</p> <pre><code>egrep 'a|b' filename  # Matches lines containing 'a' or 'b'\n</code></pre>"},{"location":"GNU/#fixed-grep","title":"Fixed grep","text":"<p><code>fgrep</code> or <code>grep -F</code> is used for fixed string matching (no regex interpretation).</p>"},{"location":"GNU/#sed","title":"sed","text":"<p><code>sed</code> is a stream editor for manipulating text. For example:</p> <pre><code>sed -r \"s/(Z|R|J)/starts with ZRJ/\" myfile.txt\n</code></pre>"},{"location":"GNU/#basic-file-editing-in-vivim","title":"Basic File Editing in vi/vim","text":""},{"location":"GNU/#vi-modes","title":"vi Modes","text":"<p><code>vi</code> operates in two modes: - Command Mode: For navigation and issuing commands. - Insert Mode: For editing text.</p>"},{"location":"GNU/#navigating-in-vi","title":"Navigating in vi","text":"<p>In command mode, use: - <code>h</code>: Move left. - <code>j</code>: Move down. - <code>k</code>: Move up. - <code>l</code>: Move right.</p>"},{"location":"GNU/#editing-text","title":"Editing Text","text":"<ul> <li><code>i</code>: Enter insert mode at the cursor position.</li> <li><code>a</code>: Enter insert mode after the cursor.</li> <li><code>x</code>: Delete a character.</li> <li><code>dd</code>: Delete a line.</li> <li><code>yy</code>: Copy a line.</li> <li><code>p</code>: Paste text.</li> </ul>"},{"location":"GNU/#search-and-replace","title":"Search and Replace","text":"<ul> <li><code>/pattern</code>: Search forward for \"pattern\".</li> <li><code>?pattern</code>: Search backward.</li> <li><code>:s/old/new/g</code>: Replace \"old\" with \"new\" in the current line.</li> </ul>"},{"location":"GNU/#exiting-vi","title":"Exiting vi","text":"<ul> <li><code>:wq</code>: Save and exit.</li> <li><code>:q!</code>: Exit without saving.</li> </ul>"},{"location":"GNU/#alternative-editors","title":"Alternative Editors","text":"<ul> <li>nano: A simple terminal-based text editor.</li> <li>emacs: A powerful and extensible text editor.</li> <li>neovim: An improved version of <code>vim</code>.</li> </ul> <p>To set your default editor:</p> <pre><code>export EDITOR='vim'  # Set vim as the default editor\n</code></pre>"},{"location":"GNU/#additional-resources","title":"Additional Resources:","text":"<ul> <li>Vim Documentation</li> <li>tmux Tutorial</li> <li>Regular Expressions Cheat Sheet</li> </ul>"},{"location":"Linux%20Installation%20and%20Package%20Management/","title":"LINUX INSTALLATION AND PACKAGE MANAGEMENT","text":""},{"location":"Linux%20Installation%20and%20Package%20Management/#i-design-hard-disk-layout","title":"I - DESIGN HARD DISK LAYOUT","text":"<p>A disk is a physical storage device. A partition is a logical subdivision of a physical disk. A disk must be partition before it can be used and information about these partitions are stored in a partition table. Use this command to view the partition table;</p> <pre><code>fdisk -l\n</code></pre> <p>In each partition there is a filesystem which describes the way information are stored on the disk. Use this command to view the different filesystems;</p> <pre><code>df -lh\n</code></pre>"},{"location":"Linux%20Installation%20and%20Package%20Management/#lvm","title":"LVM","text":"<p>Logical Volume Manager(LVM) is a tool that permits us to allocate space from multiple different disks to the same partion and easily resize the partition when needed. With LVM, each disk is seen as a Physical Volume(PV) which are then grouped into a Volume Group(VG) and repartitioned into Logical Volumes(LVs) which are now formatted with the desired filesytem. To build a Linux file system use the command;</p> <pre><code>mkfs.&lt;fstype&gt; &lt;DEVICE&gt;\n</code></pre>"},{"location":"Linux%20Installation%20and%20Package%20Management/#mount-points","title":"Mount Points","text":"<p>Mounting makes a device available for use by the system. To mount a filesystem use the command;</p> <pre><code>mount -t &lt;FILESYSTEMTYPE&gt; &lt;DEVICE&gt; &lt;DIRECTORY&gt;\n</code></pre>"},{"location":"Linux%20Installation%20and%20Package%20Management/#keeping-things-separated","title":"Keeping things separated","text":"<p>When partitioning a disk , some directories should be kept on separate partitions for safety, security and performance reasons. Some of these are; - /boot It contains files used by the bootloader to contain the OS. Usually on the first partition it has a maximum size of 528MB. - /boot/efi This is the EFI system partition and it stores bootloader and kernel images of the OS installed. - /home It stores personal user files and preferences. - /var It stores variable data. This includes system logs(/var/log), temporary files(var/tmp), and cache app data(/var/cache). - Swap partition It acts like an extended memory. It allocates some space on the disk to be used as RAM. It is mounted using the command;</p> <pre><code>mkswap\n</code></pre>"},{"location":"Linux%20Installation%20and%20Package%20Management/#ii-install-a-boot-manager","title":"II - INSTALL A BOOT MANAGER","text":"<p>When the machine is on, the BIOS starts and the system does a POST to see if eberything is okay and then hands the boot process to the first sector of the MBR(Master Boot Record) or the GPT(GUID Partition Table) if the system uses UEFI instead.</p>"},{"location":"Linux%20Installation%20and%20Package%20Management/#chainloading","title":"Chainloading","text":"<p>This is a process were the boot loader loads another boot loader, this is usually done when loading unsupported OSes like Windows. The default bootloader is loaded first, and when the corresponding option is selected the bootloader for the desired system is loaded.</p>"},{"location":"Linux%20Installation%20and%20Package%20Management/#grubgrand-unified-bootloader","title":"GRUB(GRand Unified Bootloader)","text":"<p>GRUB LEGACY(GRUBv1) is installed in /boot/grub/. Its main configuration is in the /boot/grub/menu.lst but some distributions link it to /boot/grub/grub.conf.  A sample grub.conf/menu.lst file consists of 2 sections. The first contains global configurations and the second contains different kernel, initram or chainloader options. The command to install GRUB is;</p> <pre><code>grub install /dev/sda\n</code></pre>"},{"location":"Linux%20Installation%20and%20Package%20Management/#grub-2","title":"GRUB 2","text":"<p>This is the most common bootloader today. On the BIOS it is installed on the /boot/grub/ or /boot/grub2/ and under UEFI it goes in /boot/efi/EFI/distro_name/ (e.g /boot/efi/EFI/ubuntu/). The GRUB2's configuration file is called grub.cfg.</p> <p>Some options of the grub.cfg file are;</p> OptionsDescription menuentryDefines a new menu entry set rootDefines the root where /boot is located linuxDefines the location of Linux kernel on BIOS systems linuxefiDefines the Linux kernel on UEFI systems initrdDefines the initramfs image for BIOS systems initrdefiDefines the initramfs image for UEFI systems <ul> <li>To install GRUB2</li> </ul> <pre><code>grub-install /dev/sda\n</code></pre> <ul> <li>After changing the configuration files, you issue;</li> </ul> <pre><code>grub2-mkconfig\n</code></pre> <p>OR</p> <pre><code>grub-mkconfig\n</code></pre> <p>It will read configuration files from /etc/grub.d/ and /etc/default/grub/ and creates the grub.cfg file based on them. The actual command is;</p> <pre><code>grub2-mkconfig &gt; /boot/grub2/grub.cfg\n</code></pre>"},{"location":"Linux%20Installation%20and%20Package%20Management/#iii-shared-libraries","title":"III - SHARED LIBRARIES","text":"<p>Shared libraries are compiled collections of executable codes allowing multiple programs to share the same functionality without duplicating code.</p>"},{"location":"Linux%20Installation%20and%20Package%20Management/#benefits-of-shared-libraries","title":"Benefits of Shared libraries","text":"<ol> <li>Code reuse: Multiple programs can use the same library, reducing code duplication and space.</li> <li>Easy updates: Updating a shared library propagates changes to all programs using it.</li> <li>Memory efficiency: Only one copy of the library is loaded into memory reducing memory usage.</li> </ol> <p>To build a executable file from a program's source. First, the compiler turns the source code into machine code that is stored in so(shared object) called object files. Secondly, the linker combines the object files and links them to libraries in order to generate the final excutable file. Linking: It's a process of connecting object files and libraries to create an executable file, it can be either statically or dynamically. linker command </p>"},{"location":"Linux%20Installation%20and%20Package%20Management/#static-libraries","title":"STATIC LIBRARIES","text":"<p>They are linked at compile-time. Meaning a copy of the library code is embedded into the program and becomes part of it. And thus, the program has no dependencies on the library at run time because the program already contains the libraries code. Having no dependencies can be seen as an advantage since you do not have to worry about making sure the used libraries are always available. On the downside, statically linked programs are heavier.</p>"},{"location":"Linux%20Installation%20and%20Package%20Management/#shared-or-dynamic-libraries","title":"SHARED or DYNAMIC LIBRARIES","text":"<p>They are linked aduring runtime In case of DYNAMIC LIBRARIES the linker simply takes care that the program references libraries correctly. The linker does not copy any library code into the program file. At run time, though, the shared library must be available to satisfy the program\u2019s dependencies. Shared object file naming conventions         \u2022 Library name (normally prefixed by lib)         \u2022 so (which stands for \u201cshared object\u201d)         \u2022 Version number of the library</p> <p>For example: libdfalt.so.0 for shared libraries </p> <p>Shared libraries are located on a linux system on the root directory with the following formats;</p> <p>\u2022 /lib holds essential standard libraries and libraries required for your  system to run. If a program in /bin or /sbin needs a library that library is likely in /lib. \u2022 /lib32 Used on 32-bit systems to store 32-bit libraries \u2022 /lib64 Used on 64-bit systems to store 64-bit libraries \u2022 /usr/lib \u2013 Contains shared libraries and modules used by user-space applications, such as those in /usr/bin and /usr/sbin    \u2022 /var/lib \u2013 Holds dynamic data libraries/files like the rpm/dpkg database and game scores.  \u2022 /usr/local/lib \u2013  holds libraries for local, custom, or third-party applications</p> <p>/usr/lib are the libraries for the normal user-programs, that mostly can be found under /usr.</p> <p>/usr/local/lib are the libraries for locally installed programs and packages ie. things you've compiled and installed from source-packages yourself.</p> <p>In addition to shared and static libraries which are the lib-directories main purpose, you may also find some hierarchies (with their own lib, bin, include and so on) for some larger packages under them.</p>"},{"location":"Linux%20Installation%20and%20Package%20Management/#types-of-libraries-in-ubuntu","title":"Types of Libraries in Ubuntu","text":"<p>Shared Libraries (.so files)**: These are dynamically loaded at runtime, saving memory by sharing code among programs.</p> <ul> <li> <p>Static Libraries: These are linked at compile-time, resulting in larger binaries but eliminating the need for external library files.</p> </li> <li> <p>Packages and Dependencies: Libraries are often packaged with applications or as dependencies, managed by Ubuntu\u2019s package manager (APT).</p> </li> </ul>"},{"location":"Linux%20Installation%20and%20Package%20Management/#library-management-with-apt","title":"Library Management with APT","text":"<ul> <li>Install Libraries: Use </li> </ul> <pre><code>apt install &lt;library_name&gt;\n</code></pre> <p>to install libraries (often in the form of <code>lib&lt;name&gt;-dev</code> packages for development). Example: <code>sudo apt install libssl-dev</code> installs the development files for OpenSSL. - Update and Upgrade Libraries: Use</p> <pre><code>sudo apt update\n</code></pre> <p>to refresh repositories, and  <code>shell  sudo apt upgrade</code> to update libraries to the latest versions. - Remove Libraries: Use</p> <pre><code>sudo apt remove &lt;library_name&gt;\n</code></pre> <p>OR</p> <pre><code>sudo apt purge &lt;library_name&gt;\n</code></pre> <p>to uninstall libraries and all configuration files as well.</p>"},{"location":"Linux%20Installation%20and%20Package%20Management/#commonly-used-libraries-in-ubuntu","title":"Commonly Used Libraries in Ubuntu","text":"<ul> <li>libc6: The GNU C Library, a core library for compatibility with system calls.</li> <li>libstdc++: The GNU Standard C++ Library, used by many C++ applications.</li> <li>libssl: OpenSSL library, provides SSL and TLS protocols.</li> <li>libx11-dev: Development library for the X Window System, used for GUI applications.</li> <li>libcurl: For network transfers with URLs, commonly used for HTTP requests.</li> </ul>"},{"location":"Linux%20Installation%20and%20Package%20Management/#custom-libraries","title":"Custom Libraries","text":"<ul> <li>Custom libraries can be compiled from source using</li> </ul> <pre><code>gcc\n</code></pre> <p>OR</p> <pre><code>make\n</code></pre> <p>After compiling, they can be linked during development by setting the <code>LD_LIBRARY_PATH</code> to point to the library directory.    - Use <code>ldconfig</code> to refresh the shared library cache.</p>"},{"location":"Linux%20Installation%20and%20Package%20Management/#finding-library-files","title":"Finding Library Files","text":"<ul> <li>Locate Installed Libraries: Use</li> </ul> <pre><code>ldconfig -p | grep &lt;library_name&gt;\n</code></pre> <p>to see if a library is installed and its path.    - List Dependencies of an Executable: Use</p> <pre><code>ldd &lt;executable&gt;\n</code></pre> <p>shows shared libraries required by a specific executable.</p>"},{"location":"Linux%20Installation%20and%20Package%20Management/#library-paths-and-configurations","title":"Library Paths and Configurations","text":"<ul> <li>Environment Variables:<ul> <li><code>LD_LIBRARY_PATH</code>: Specifies directories where the loader searches for shared libraries before the default paths.</li> </ul> </li> <li> <p>Configuration Files:</p> <ul> <li><code>/etc/ld.so.conf</code>: Lists directories where the linker looks for libraries.</li> <li><code>ldconfig</code>: Reads the <code>/etc/ld.so.conf</code> file and updates the cache for shared libraries.</li> </ul> </li> <li> <p>Troubleshooting Library Issues If you encounter <code>library not found</code> errors, ensure:</p> <ol> <li>The library is installed.</li> <li><code>LD_LIBRARY_PATH</code> or <code>/etc/ld.so.conf</code> is configured to include the library path.</li> <li>Run <code>sudo ldconfig</code> after any changes to library paths.</li> </ol> </li> </ul> <p>REMARK: Because the files containing shared libraries must be available when the program is executed, most Linux systems contain shared libraries. Since static libraries are only required in a dedicated file when a program is linked, they might not be present on an end user system.</p>"},{"location":"Multipass/","title":"Multipass Docker VM Documentation","text":"<p>This guide explains how to use Multipass to launch and manage Docker containers within a virtual machine (VM). Each section provides step-by-step instructions for various tasks, from launching a Docker VM to linking it with the host machine and accessing Docker services.</p>"},{"location":"Multipass/#1-launch-docker-vm-with-multipass","title":"1. Launch Docker VM with Multipass","text":"<p>To launch a new virtual machine running Docker, use the following command:</p> <pre><code>multipass launch --name docker-vm\n</code></pre> <p>This command launches a new Ubuntu instance named <code>docker-vm</code>. You can manually install Docker inside the VM or automate the process using a cloud-init script.</p>"},{"location":"Multipass/#2-list-running-instances-with-multipass","title":"2. List Running Instances with Multipass","text":"<p>To check all running Multipass instances, use:</p> <pre><code>multipass list\n</code></pre> <p>Example Output:</p> <pre><code>Name                    State             IPv4             Image\ndocker-vm               Running           192.168.64.2     Ubuntu 22.04 LTS\n</code></pre>"},{"location":"Multipass/#3-access-the-docker-vm-shell","title":"3. Access the Docker VM Shell","text":"<p>To interact with the VM directly, enter its shell:</p> <pre><code>multipass shell docker-vm\n</code></pre> <p>Once inside, you can install Docker or manage configurations.</p>"},{"location":"Multipass/#4-launch-a-docker-vm-with-a-custom-name","title":"4. Launch a Docker VM with a Custom Name","text":"<p>Specify a custom name for the VM during launch:</p> <pre><code>multipass launch --name docker-vm\n</code></pre> <p>The <code>--name</code> flag assigns a custom name (<code>docker-vm</code> in this case).</p>"},{"location":"Multipass/#5-view-available-multipass-images","title":"5. View Available Multipass Images","text":"<p>To see available images for launching VMs:</p> <pre><code>multipass images\n</code></pre> <p>This lists all available images (e.g., Ubuntu versions).</p>"},{"location":"Multipass/#6-check-running-docker-containers","title":"6. Check Running Docker Containers","text":"<p>Once Docker is installed, check container status inside the VM:</p> <pre><code>docker ps\n</code></pre> <p>This lists all running Docker containers, including their names, statuses, and port mappings.</p>"},{"location":"Multipass/#7-access-a-docker-container-via-portainer","title":"7. Access a Docker Container via Portainer","text":"<p>To access a Docker container from the host machine:</p> <ol> <li>Find the VM's IP address:</li> </ol> <p><code>sh    multipass list</code></p> <ol> <li>Map the container port (e.g., <code>9000</code>) to the host. Access it via:</li> </ol> <p><code>http://&lt;VM-IP&gt;:9000</code></p> <p>Example:</p> <p><code>http://192.168.64.2:9000</code></p> <p>This allows access to the Portainer web interface running in the VM.</p>"},{"location":"Multipass/#8-link-host-machine-with-virtual-machine","title":"8. Link Host Machine with Virtual Machine","text":"<p>To facilitate file sharing, mount a host directory into the VM:</p> <pre><code>multipass mount /host/directory docker-vm:/vm/directory\n</code></pre> <p>This mounts <code>/host/directory</code> from the host into <code>/vm/directory</code> in the VM.</p>"},{"location":"Multipass/#9-execute-docker-commands-in-vm-from-host","title":"9. Execute Docker Commands in VM from Host","text":"<p>Run Docker commands directly from the host using <code>multipass exec</code>:</p> <pre><code>multipass exec docker-vm -- docker ps\n</code></pre> <p>This executes <code>docker ps</code> inside <code>docker-vm</code> and displays the output on the host.</p>"},{"location":"Multipass/#10-create-a-docker-alias-for-ease-of-use","title":"10. Create a Docker Alias for Ease of Use","text":"<p>Simplify Docker commands by creating an alias in your <code>~/.bashrc</code> or <code>~/.zshrc</code> file:</p> <pre><code>alias docker=\"multipass exec docker-vm -- docker\"\n</code></pre> <p>Now, run Docker commands as if they were local:</p> <pre><code>docker ps\n</code></pre> <p>This executes the commands inside <code>docker-vm</code> seamlessly.</p>"},{"location":"Package_Management/","title":"Package Management in Linux","text":"<p>A package manager in Linux is a software tool used to automate the process of installing, updating, and removing software packages on a Linux system. Below is a detailed guide to package management across various Linux distributions.</p>"},{"location":"Package_Management/#1-debian-based-systems","title":"1. Debian-Based Systems","text":"<p>Distributions: Ubuntu, Debian, Linux Mint Package Format: <code>.deb</code></p>"},{"location":"Package_Management/#package-managers","title":"Package Managers","text":""},{"location":"Package_Management/#dpkg-low-level-package-manager","title":"dpkg (Low-Level Package Manager)","text":"<ul> <li>Commands:</li> <li><code>dpkg -i &lt;package&gt;</code>: Install a package.</li> <li><code>dpkg -r &lt;package&gt;</code>: Remove a package.</li> <li><code>dpkg -L &lt;package&gt;</code>: List files in a package.</li> <li><code>dpkg -S &lt;package&gt;</code>: Search for a package owning a particular file.</li> <li><code>dpkg --configure -a</code>: Reconfigure packages.</li> <li><code>dpkg --purge &lt;package&gt;</code>: Remove a package including configuration files.</li> <li><code>dpkg --verify &lt;package&gt;</code>: Verify the integrity of a package.</li> <li><code>dpkg -i --force PACKAGENAME</code>: Force dpkg to install or remove a package.</li> <li><code>dpkg-query --list</code>: List all installed packages and libraries.</li> </ul>"},{"location":"Package_Management/#apt-advanced-package-tool","title":"APT (Advanced Package Tool)","text":"<ul> <li>Commands:</li> <li><code>apt-get update</code>: Update the package database.</li> <li><code>apt-get upgrade</code>: Upgrade installed packages.</li> <li><code>apt-get install -f</code>: Fix broken dependencies or partially downloaded packages.</li> <li><code>apt upgrade &lt;package&gt;</code>: Upgrade a specific package.</li> <li><code>apt install &lt;package&gt;</code>: Install a package.</li> <li><code>apt remove &lt;package&gt;</code>: Remove a package.</li> <li><code>apt --fix-broken install</code>: Fix a broken package.</li> <li><code>apt-cache search &lt;package&gt;</code>: Search for a package.</li> <li><code>apt clean</code>: Clear downloaded packages.</li> <li><code>apt autoremove</code>: Clean unneeded dependencies.</li> <li><code>apt full-upgrade</code>: Remove or install packages to satisfy dependencies.</li> <li><code>apt dist-upgrade</code>: Handle dependency changes.</li> <li><code>apt install &lt;package&gt;=&lt;version&gt;</code>: Install a specific version of a package.</li> <li><code>apt-get check</code>: Check the system for broken dependencies.</li> </ul>"},{"location":"Package_Management/#2-red-hat-based-systems","title":"2. Red Hat-Based Systems","text":"<p>Distributions: Red Hat Enterprise Linux (RHEL), CentOS, Fedora Package Format: <code>.rpm</code></p>"},{"location":"Package_Management/#package-managers_1","title":"Package Managers","text":""},{"location":"Package_Management/#rpm-low-level-package-manager","title":"rpm (Low-Level Package Manager)","text":"<ul> <li>Commands:</li> <li><code>rpm -i &lt;package&gt;.rpm</code>: Install an .rpm package.</li> <li><code>rpm -e &lt;package&gt;</code>: Remove a package.</li> <li><code>rpm -q &lt;package&gt;</code>: Query a package.</li> <li><code>rpm --checksig &lt;package&gt;.rpm</code>: Verify an RPM package.</li> </ul>"},{"location":"Package_Management/#yum-yellowdog-updater-modified","title":"YUM (Yellowdog Updater, Modified)","text":"<ul> <li>Commands:</li> <li><code>yum install &lt;package&gt;</code>: Install a package.</li> <li><code>yum remove &lt;package&gt;</code>: Remove a package.</li> <li><code>yum search &lt;package&gt;</code>: Search for a package.</li> <li><code>yum check</code>: Check for broken dependencies.</li> </ul>"},{"location":"Package_Management/#dnf-dandified-yum","title":"DNF (Dandified YUM)","text":"<ul> <li>Commands:</li> <li><code>dnf install &lt;package&gt;</code>: Install a package.</li> <li><code>dnf remove &lt;package&gt;</code>: Remove a package.</li> <li><code>dnf search &lt;package&gt;</code>: Search for a package.</li> <li><code>dnf downgrade &lt;package&gt;</code>: Downgrade to a previous version.</li> <li><code>dnf upgrade</code>: Upgrade packages.</li> <li><code>dnf check-update</code>: Check for updates.</li> <li><code>dnf check</code>: Check for broken dependencies.</li> <li><code>dnf deplist &lt;package&gt;</code>: Display package dependency tree.</li> <li><code>dnf list --installed</code>: List installed packages.</li> </ul>"},{"location":"Package_Management/#3-suse-based-systems","title":"3. SUSE-Based Systems","text":"<p>Distributions: openSUSE, SUSE Linux Enterprise Server (SLES) Package Format: <code>.rpm</code></p>"},{"location":"Package_Management/#package-manager","title":"Package Manager","text":""},{"location":"Package_Management/#zypper","title":"zypper","text":"<ul> <li>Commands:</li> <li><code>zypper install &lt;package&gt;</code>: Install a package.</li> <li><code>zypper install -f &lt;package&gt;</code>: Install and fix dependencies.</li> <li><code>zypper install --download-only &lt;package&gt;</code>: Download a package without installing.</li> <li><code>zypper remove &lt;package&gt;</code>: Remove a package.</li> <li><code>zypper search &lt;package&gt;</code>: Search for a package.</li> <li><code>zypper update</code>: Update all installed packages.</li> <li><code>zypper verify</code>: Identify and fix broken packages.</li> <li><code>zypper clean</code>: Clear cache.</li> <li><code>zypper info --recommends &lt;package&gt;</code>: List optional recommended dependencies.</li> <li><code>zypper install --oldpackage &lt;package&gt;=&lt;version&gt;</code>: Install an older version.</li> <li><code>zypper se --provides</code>: Display which package owns a file.</li> </ul>"},{"location":"Package_Management/#4-gentoo-based-systems","title":"4. Gentoo-Based Systems","text":"<p>Distribution: Gentoo Package Format: Source packages</p>"},{"location":"Package_Management/#package-manager_1","title":"Package Manager","text":""},{"location":"Package_Management/#portage-emerge","title":"Portage (emerge)","text":"<ul> <li>Commands:</li> <li><code>emerge &lt;package&gt;</code>: Install a package.</li> <li><code>emerge --unmerge &lt;package&gt;</code>: Remove a package.</li> <li><code>emerge --search &lt;package&gt;</code>: Search for a package.</li> <li><code>emerge --update &lt;package&gt;</code>: Upgrade a package.</li> <li><code>emerge --fetchonly &lt;package&gt;</code>: Download a package without installing.</li> </ul>"},{"location":"Package_Management/#5-arch-based-systems","title":"5. Arch-Based Systems","text":"<p>Distributions: Arch Linux, Manjaro Package Format: <code>.pkg</code>, <code>.tar</code>, <code>.zst</code></p>"},{"location":"Package_Management/#package-manager_2","title":"Package Manager","text":""},{"location":"Package_Management/#pacman","title":"pacman","text":"<ul> <li>Commands:</li> <li><code>pacman -S &lt;package&gt;</code>: Install a package.</li> <li><code>pacman -R &lt;package&gt;</code>: Remove a package.</li> <li><code>pacman -Ss &lt;package&gt;</code>: Search for a package.</li> <li><code>pacman -Syu</code>: Update the system and packages.</li> <li><code>pacman -Sc</code>: Clean the cache but keep currently installed files.</li> <li><code>pacman -Syu</code>: Perform a full system upgrade.</li> <li><code>pacman -S &lt;package&gt;</code>: Upgrade a specific package if already installed.</li> <li><code>pacman -Dk &lt;package&gt;</code>: Check for broken dependencies.</li> <li><code>pacman -Qi &lt;package&gt;</code>: Show information on a package including dependencies.</li> </ul>"},{"location":"Package_Management/#6-alpine-linux","title":"6. Alpine Linux","text":"<p>Distribution: Alpine Package Format: <code>.apk</code></p>"},{"location":"Package_Management/#package-manager_3","title":"Package Manager","text":""},{"location":"Package_Management/#apk","title":"apk","text":"<ul> <li>Commands:</li> <li><code>apk add &lt;package&gt;</code>: Install a package.</li> <li><code>apk del &lt;package&gt;</code>: Remove a package.</li> <li><code>apk search &lt;package&gt;</code>: Search for packages.</li> <li><code>apk info -R &lt;package&gt;</code>: Display package dependency tree.</li> <li><code>apk upgrade &lt;package&gt;</code>: Upgrade a package.</li> <li><code>apk fetch &lt;package&gt;</code>: Download a package without installing.</li> </ul>"},{"location":"Package_Management/#note","title":"Note","text":"<p>Some package managers automatically handle dependency issues during installation or updates. Others may require manual intervention, such as downloading and installing specific versions of packages. Always remove the upgraded version before downgrading.</p>"},{"location":"SHELL-SCRIPTING/","title":"Shell Scripting Guide","text":"<p>This guide covers essential concepts and techniques for shell scripting, including customizing shell variables, loops, conditional statements, functions, and more. It\u2019s designed to help you write efficient and maintainable scripts.</p>"},{"location":"SHELL-SCRIPTING/#customizing-and-using-shell-variables","title":"Customizing and Using Shell Variables","text":""},{"location":"SHELL-SCRIPTING/#key-points","title":"Key Points","text":"<ul> <li>Set environment variables.</li> <li>Write Bash functions for frequently used commands.</li> <li>Maintain skeleton directories for new user accounts.</li> <li>Set the command search path with the proper directory.</li> </ul>"},{"location":"SHELL-SCRIPTING/#shell-overview","title":"Shell Overview","text":"<p>The shell is a powerful tool in Linux, providing an interface for managing the operating system. It takes user input as commands and outputs results to the terminal.</p>"},{"location":"SHELL-SCRIPTING/#shell-types","title":"Shell Types","text":"<ul> <li>Login Shells: Initial shell started when a user logs in (e.g., via terminal or SSH). Uses <code>~/.profile</code> or <code>~/.bashrc</code>. Indicated by <code>-</code>.</li> <li>Non-Login Shells: Started without a login process (e.g., from another shell or program). Executes <code>~/.bashrc</code>.</li> <li>Interactive Shells: Respond to user commands (e.g., Bash, Zsh).</li> <li>Non-Interactive Shells: Do not allow user input (e.g., running a command via SSH).</li> </ul>"},{"location":"SHELL-SCRIPTING/#startup-scripts","title":"Startup Scripts","text":"<ul> <li>/etc/profile: Sets environment variables for all users.</li> <li>~/.bash_profile: Configures the user\u2019s environment.</li> <li>~/.bashrc: Runs for interactive non-login shells.</li> <li>~/.bash_logout: Executes cleanup tasks on logout.</li> </ul>"},{"location":"SHELL-SCRIPTING/#executing-files","title":"Executing Files","text":"<p>Use either of the following commands:</p> <pre><code>source &lt;filename&gt;\n. &lt;filename&gt;\n</code></pre>"},{"location":"SHELL-SCRIPTING/#skel-directory","title":"SKEL Directory","text":"<p>The <code>/etc/skel</code> directory contains template files for new user accounts. View its contents with:</p> <pre><code>cd /etc/skel\n</code></pre>"},{"location":"SHELL-SCRIPTING/#extended-tests","title":"Extended Tests","text":"<p>Tests evaluate expressions using square brackets:</p> <pre><code>if [[ -f \"$filename\" ]]; then\n  echo \"File exists.\"\nelse\n  echo \"File does not exist.\"\nfi\n</code></pre>"},{"location":"SHELL-SCRIPTING/#loop-constructs","title":"Loop Constructs","text":""},{"location":"SHELL-SCRIPTING/#types-of-loops","title":"Types of Loops","text":"<ol> <li>For Loop    Iterates through a list of items:</li> </ol> <p><code>bash    for VARNAME in LIST; do      COMMANDS    done</code></p> <ol> <li>Until Loop    Runs until a condition becomes true:</li> </ol> <p><code>bash    until [ \"$count\" -eq 5 ]; do      echo \"Count: $count\"      count=$((count + 1))    done</code></p> <ol> <li>While Loop    Runs while a condition is true:</li> </ol> <p><code>bash    while [ $count -le 5 ]; do      echo \"Count: $count\"      ((count++))    done</code></p>"},{"location":"SHELL-SCRIPTING/#variables-in-shell-scripting","title":"Variables in Shell Scripting","text":""},{"location":"SHELL-SCRIPTING/#variable-basics","title":"Variable Basics","text":"<ul> <li>Syntax: <code>&lt;variable_name&gt;=&lt;variable_value&gt;</code> (no spaces around <code>=</code>).</li> <li>Display: Use <code>$</code> and <code>echo</code>:</li> </ul> <p><code>bash   echo $&lt;variable_name&gt;</code></p>"},{"location":"SHELL-SCRIPTING/#variable-types","title":"Variable Types","text":"<ul> <li>Global Variables: Exist only within the shell they are created.</li> <li>Local Variables: Exist in all new shells. Use <code>export</code> to make a local variable global:</li> </ul> <p><code>bash   export &lt;variable_name&gt;</code></p>"},{"location":"SHELL-SCRIPTING/#special-variables","title":"Special Variables","text":"<ul> <li><code>$?</code>: Exit status of the last command.</li> <li><code>$$</code>: PID of the current shell.</li> <li><code>$!</code>: PID of the last background job.</li> <li><code>$#</code>: Number of arguments passed to the script.</li> <li><code>$@</code>: All arguments passed to the script.</li> </ul>"},{"location":"SHELL-SCRIPTING/#case-statement","title":"Case Statement","text":"<p>Executes code blocks based on a variable\u2019s value:</p> <pre><code>case $fruit in\n  apple) echo \"You chose an apple!\" ;;\n  banana) echo \"You chose a banana!\" ;;\n  *) echo \"Unknown fruit!\" ;;\nesac\n</code></pre>"},{"location":"SHELL-SCRIPTING/#script-structure-and-extensions","title":"Script Structure and Extensions","text":"<ul> <li>Shebang: <code>#!/bin/bash</code> specifies the interpreter.</li> <li>Permissions: Use <code>chmod</code> to set executable permissions:</li> </ul> <p><code>bash   chmod u+x script.sh</code></p> <ul> <li>Execution: Run with <code>./script.sh</code>.</li> </ul>"},{"location":"SHELL-SCRIPTING/#arrays","title":"Arrays","text":"<p>Store multiple values in a single variable:</p> <pre><code>declare -a size=(1 2 3 4 5)\necho ${size[1]}  # Output: 2\n</code></pre>"},{"location":"SHELL-SCRIPTING/#arithmetic-expressions","title":"Arithmetic Expressions","text":"<p>Perform calculations:</p> <pre><code>sum=$((val1 + val2))\n</code></pre>"},{"location":"SHELL-SCRIPTING/#conditional-expressions","title":"Conditional Expressions","text":""},{"location":"SHELL-SCRIPTING/#and-statement","title":"AND Statement","text":"<pre><code>if [[ \"$age\" -gt 18 &amp;&amp; \"$age\" -lt 30 ]]; then\n  echo \"Valid age.\"\nfi\n</code></pre>"},{"location":"SHELL-SCRIPTING/#or-statement","title":"OR Statement","text":"<pre><code>if [ \"$age\" -gt 18 ] || [ \"$age\" -lt 30 ]; then\n  echo \"Valid age.\"\nfi\n</code></pre>"},{"location":"SHELL-SCRIPTING/#functions-and-aliases","title":"Functions and Aliases","text":""},{"location":"SHELL-SCRIPTING/#creating-functions","title":"Creating Functions","text":"<pre><code>function greet {\n  echo \"Hello, $1!\"\n}\ngreet \"John\"\n</code></pre>"},{"location":"SHELL-SCRIPTING/#aliases","title":"Aliases","text":"<pre><code>alias ll='ls -la'\n</code></pre>"},{"location":"SHELL-SCRIPTING/#task-list-script","title":"Task List Script","text":"<p>A simple task manager:</p> <pre><code>#!/bin/bash\n\nadd_task() {\n  echo \"$1\" &gt;&gt; tasks.txt\n  echo \"Task added.\"\n}\n\nremove_task() {\n  sed -i \"/$1/d\" tasks.txt\n  echo \"Task removed.\"\n}\n\nview_tasks() {\n  cat tasks.txt\n}\n\nwhile true; do\n  echo \"1. Add task\"\n  echo \"2. Remove task\"\n  echo \"3. View tasks\"\n  echo \"4. Exit\"\n  read -p \"Enter choice: \" choice\n\n  case $choice in\n    1) read -p \"Enter task: \" task; add_task \"$task\" ;;\n    2) read -p \"Enter task to remove: \" task; remove_task \"$task\" ;;\n    3) view_tasks ;;\n    4) exit 0 ;;\n    *) echo \"Invalid choice.\" ;;\n  esac\ndone\n</code></pre>"},{"location":"SYSTEM%20Architecture/","title":"System Architecture","text":"<p>System architecture is a conceptual model that defines the structure, behavior, and various views of a system. This presentation is divided into three main topics:</p> <ol> <li>Determining and configuring hardware settings.</li> <li>Booting the system.</li> <li>Changing runlevels/boot targets and shutting down or rebooting the system.</li> </ol>"},{"location":"SYSTEM%20Architecture/#determining-and-configuring-hardware-settings","title":"Determining and Configuring Hardware Settings","text":""},{"location":"SYSTEM%20Architecture/#device-activation","title":"Device Activation","text":"<p>Device activation is the process of making hardware devices available for use by the operating system (OS) and user applications. Once devices are correctly identified, the OS associates the corresponding software components required to operate them.</p>"},{"location":"SYSTEM%20Architecture/#bios-settings","title":"BIOS Settings","text":"<p>The BIOS (Basic Input/Output System) is responsible for identifying, configuring, testing, and connecting computer hardware immediately after the computer is powered on.  </p> <ul> <li>Accessing BIOS: Press F2 or F12 during startup.  </li> <li>Functionality: Enables/disables integrated peripherals and changes hardware settings.</li> </ul>"},{"location":"SYSTEM%20Architecture/#device-inspection","title":"Device Inspection","text":"<p>Devices are inspected using the following commands:  </p> <ul> <li><code>lspci</code>: Displays devices connected to the PCI (Peripheral Component Interconnect) bus.  </li> <li><code>lsusb</code>: Lists USB (Universal Serial Bus) devices connected to the machine.  </li> </ul> <p>Hardware devices identified by the OS require kernel modules (software components) to function fully.  </p>"},{"location":"SYSTEM%20Architecture/#kernel-module-commands","title":"Kernel Module Commands","text":"<ul> <li><code>lsmod</code>: Displays all loaded kernel modules.  </li> <li><code>modprobe</code>: Loads or unloads kernel modules.  </li> <li><code>/etc/modprobe.d/blacklist.conf</code>: Used to prevent specific modules from loading.  </li> </ul>"},{"location":"SYSTEM%20Architecture/#system-files-for-hardware-information","title":"System Files for Hardware Information","text":"<ul> <li><code>/proc/cpuinfo</code>: Provides detailed information about the CPU.  </li> <li><code>/sys</code>: Stores device information and kernel-related hardware data.  </li> </ul>"},{"location":"SYSTEM%20Architecture/#storage-devices","title":"Storage Devices","text":"<p>In Linux, storage devices are referred to as block devices because data is read and written in blocks of buffered data with varying sizes and positions.</p>"},{"location":"SYSTEM%20Architecture/#booting-the-system","title":"Booting the System","text":""},{"location":"SYSTEM%20Architecture/#bios-or-uefi","title":"BIOS or UEFI","text":""},{"location":"SYSTEM%20Architecture/#bios-basic-inputoutput-system","title":"BIOS (Basic Input/Output System)","text":"<ul> <li>Function: A program stored in non-volatile memory on the motherboard, executed at startup.  </li> <li>Boot Process:  </li> <li>POST (Power-On Self-Test): Identifies hardware failures.  </li> <li>Activation: Enables basic components (e.g., video output, keyboard, storage).  </li> <li>Bootloader: Loads the first stage of the bootloader from the MBR (Master Boot Record).  </li> <li>Kernel Loading: The bootloader loads the kernel to start the OS.  </li> </ul>"},{"location":"SYSTEM%20Architecture/#uefi-unified-extensible-firmware-interface","title":"UEFI (Unified Extensible Firmware Interface)","text":"<ul> <li>Function: A modern replacement for BIOS, offering extensibility and support for larger storage devices.  </li> <li>Boot Process:  </li> <li>POST: Identifies hardware failures.  </li> <li>Activation: Enables basic components.  </li> <li>EFI Application: Executes pre-defined EFI applications (e.g., bootloaders) stored in the ESP (EFI System Partition).  </li> <li>Kernel Loading: The bootloader loads the kernel to start the OS.  </li> </ul>"},{"location":"SYSTEM%20Architecture/#differences-between-bios-and-uefi","title":"Differences Between BIOS and UEFI","text":"Feature BIOS UEFI Partition Table MBR (Master Boot Record) GPT (GUID Partition Table) Extensibility Not extensible Extensible Max Partitions 4 128"},{"location":"SYSTEM%20Architecture/#the-bootloader","title":"The Bootloader","text":"<p>The most popular bootloader for Linux is GRUB (Grand Unified Bootloader).  </p>"},{"location":"SYSTEM%20Architecture/#grub-features","title":"GRUB Features","text":"<ul> <li>Displays a list of installed operating systems.  </li> <li>Allows passing kernel parameters (e.g., <code>acpi</code>, <code>init</code>, <code>systemd.unit</code>, <code>mem</code>, <code>root</code>).  </li> </ul>"},{"location":"SYSTEM%20Architecture/#system-initialization","title":"System Initialization","text":"<pre><code>graph LR\nA[INIT] --&gt; B[Service Managers]\nB --&gt; C[systemd]\nB --&gt; D[SysVinit]\nB --&gt; E[Upstart]\nA --&gt; F[Daemons]\n</code></pre> <ul> <li>Initramfs: An archive containing a filesystem mounted by the kernel during the boot process.  </li> <li>Service Managers:  </li> <li>systemd: Modern init system with parallel service startup.  </li> <li>SysVinit: Traditional init system using runlevels.  </li> <li>Upstart: Speeds up boot by parallelizing service loading.  </li> </ul>"},{"location":"SYSTEM%20Architecture/#initialization-inspection","title":"Initialization Inspection","text":"<ul> <li>Kernel Ring Buffer: Stores kernel messages, including boot messages.  </li> <li><code>dmesg</code>: Displays current messages in the kernel ring buffer.  </li> </ul>"},{"location":"SYSTEM%20Architecture/#changing-runlevelsboot-targets-and-shutting-down-or-rebooting-the-system","title":"Changing Runlevels/Boot Targets and Shutting Down or Rebooting the System","text":""},{"location":"SYSTEM%20Architecture/#sysvinit","title":"SysVinit","text":"<p>SysVinit uses runlevels to define system states:  </p> Runlevel Description 0 Halt the system 1 Single-user mode (maintenance) 2 Multi-user mode without networking 3 Full multi-user mode (with networking) 4 User-definable 5 Multi-user mode with graphical interface 6 Reboot the system"},{"location":"SYSTEM%20Architecture/#commands","title":"Commands","text":"<ul> <li><code>/sbin/init</code>: Manages runlevels and associated daemons.  </li> <li><code>/etc/inittab</code>: Defines the default runlevel.  </li> <li><code>telinit</code>: Switches between runlevels.  </li> <li><code>runlevel</code>: Displays the current runlevel.  </li> </ul>"},{"location":"SYSTEM%20Architecture/#systemd","title":"Systemd","text":"<p>Systemd is a modern init system used by many Linux distributions.  </p>"},{"location":"SYSTEM%20Architecture/#key-features","title":"Key Features","text":"<ul> <li>Unit Files: Define service behavior (located in <code>/etc/systemd/system/</code> and <code>/lib/systemd/system/</code>).  </li> <li>Targets: Replace runlevels (e.g., <code>multi-user.target</code>, <code>graphical.target</code>).  </li> <li>Parallel Startup: Speeds up boot by starting services in parallel.  </li> </ul>"},{"location":"SYSTEM%20Architecture/#commands_1","title":"Commands","text":"<ul> <li><code>systemctl</code>: Controls system units.  </li> <li><code>systemctl start unit.service</code>: Starts a unit.  </li> <li><code>systemctl stop unit.service</code>: Stops a unit.  </li> <li><code>systemctl restart unit.service</code>: Restarts a unit.  </li> <li><code>systemctl status unit.service</code>: Displays the state of a unit.  </li> </ul>"},{"location":"SYSTEM%20Architecture/#shutdown-and-restart","title":"Shutdown and Restart","text":"<ul> <li><code>shutdown</code>: Shuts down or reboots the system.  </li> <li>Notifies logged-in users and prevents new logins.  </li> <li>Sends <code>SIGTERM</code> and <code>SIGKILL</code> signals to processes.  </li> <li>Defaults to single-user mode if no options are specified.  </li> </ul>"},{"location":"Schedulingjobs/","title":"Presentation on Administrative Task Scheduling","text":""},{"location":"Schedulingjobs/#scheduling-jobs-and-tasks","title":"Scheduling Jobs and Tasks","text":""},{"location":"Schedulingjobs/#general-objectives","title":"General Objectives","text":"<p>By the end of this session, you will learn:</p> <ul> <li>How to schedule cron jobs using <code>cron</code>, <code>at</code>, <code>batch</code>, and <code>systemd</code>.</li> <li>The difference between user crontabs and system crontabs.</li> <li>How to edit crontabs and configure the <code>/etc/crontab</code> file.</li> <li>Time specifications used in crontab job scheduling.</li> <li>Cron tab variables.</li> <li>How to create system and user crons.</li> <li>How to configure access to cron.</li> <li>How to use <code>systemd</code> to manage crons and alternatives to <code>at</code>.</li> </ul>"},{"location":"Schedulingjobs/#introduction","title":"Introduction","text":"<p>As a system administrator, scheduling tasks is crucial for automating repetitive activities and ensuring system efficiency.</p>"},{"location":"Schedulingjobs/#cron-jobs","title":"Cron Jobs","text":"<p>Cron is a daemon that runs in the background and checks for scheduled tasks every minute. Anacron is a program used to schedule jobs on systems that may be powered off and can only be edited by root users.</p>"},{"location":"Schedulingjobs/#differences-between-user-cron-and-system-cron","title":"Differences Between User Cron and System Cron","text":"<ul> <li>User Cron: Stored in <code>/var/spool/cron/</code>.</li> <li>System Cron: Stored in <code>/etc/crontab</code> and <code>/etc/cron.d/</code>.</li> </ul>"},{"location":"Schedulingjobs/#special-characters-in-cron-jobs","title":"Special Characters in Cron Jobs","text":"Symbol Description Example <code>*</code> Any possible value <code>* * * * * command</code> <code>,</code> List of values <code>* 1,2,3 * * * command</code> <code>-</code> Range of values <code>1-30 * * * * command</code> <code>/</code> Step values (repetition) <code>*/30 * * * * command</code>"},{"location":"Schedulingjobs/#adding-a-cron-job","title":"Adding a Cron Job","text":"<p>Edit the crontab file using:</p> <pre><code>crontab -e\n</code></pre> <p>Or edit the system crontab:</p> <pre><code>vim /etc/crontab\n</code></pre>"},{"location":"Schedulingjobs/#special-files-for-scheduling-cron-jobs","title":"Special Files for Scheduling Cron Jobs","text":"File Function <code>/etc/cron.d/</code> Contains anacron facilities <code>/etc/cron.daily/</code> Executes scripts daily at midnight <code>/etc/cron.hourly/</code> Executes scripts hourly <code>/etc/cron.monthly/</code> Executes scripts monthly at midnight <code>/etc/cron.weekly/</code> Executes scripts weekly on Sunday at midnight"},{"location":"Schedulingjobs/#special-time-specifications","title":"Special Time Specifications","text":"Specification Function <code>@hourly</code> Executes every hour <code>@daily</code> Executes every day <code>@weekly</code> Executes every week <code>@monthly</code> Executes every month <code>@yearly</code> Executes every year"},{"location":"Schedulingjobs/#cron-variables","title":"Cron Variables","text":"Variable Description <code>PATH</code> Specifies the absolute path to the task <code>SHELL</code> Indicates the shell used to execute the task <code>MAILTO</code> Specifies the email address for notifications <code>HOME</code> Specifies the home directory for the task"},{"location":"Schedulingjobs/#practical-examples","title":"Practical Examples","text":""},{"location":"Schedulingjobs/#example-1-run-a-script-every-two-minutes","title":"Example 1: Run a Script Every Two Minutes","text":"<pre><code>crontab -e\n* */2 * * * /home/username/directory/hello.sh\n</code></pre>"},{"location":"Schedulingjobs/#example-2-remove-a-scheduled-cron-job","title":"Example 2: Remove a Scheduled Cron Job","text":"<pre><code>crontab -r\n</code></pre>"},{"location":"Schedulingjobs/#example-3-list-scheduled-cron-jobs","title":"Example 3: List Scheduled Cron Jobs","text":"<pre><code>crontab -l\n</code></pre>"},{"location":"Schedulingjobs/#example-4-check-mail-for-cron-notifications","title":"Example 4: Check Mail for Cron Notifications","text":"<pre><code>cat /var/spool/mail/username\n</code></pre>"},{"location":"Schedulingjobs/#scheduling-with-at-command","title":"Scheduling with <code>at</code> Command","text":"<p>The <code>at</code> command is used for one-time job scheduling.</p>"},{"location":"Schedulingjobs/#examples","title":"Examples","text":"<pre><code>at now +5 minutes echo \"My first at job\" &gt; file.txt\nat teatime cat file.txt  # teatime = 16:00 (4:00 PM)\n</code></pre>"},{"location":"Schedulingjobs/#commands","title":"Commands","text":"<ul> <li><code>atq</code>: Lists pending <code>at</code> jobs.</li> <li><code>atrm</code>: Removes a specific <code>at</code> job.</li> </ul>"},{"location":"Schedulingjobs/#using-systemd-for-scheduling","title":"Using <code>systemd</code> for Scheduling","text":"<p><code>systemd</code> provides an alternative to cron with <code>.timer</code> services.</p>"},{"location":"Schedulingjobs/#example-creating-a-timer","title":"Example: Creating a Timer","text":"<ol> <li>Create a file <code>file.timer</code> in <code>/etc/systemd/system/</code>:    ```ini    [Unit]    Description=Run the timing task</li> </ol> <p>[Timer]    OnCalendar=--* 00:0/2:00    Persistent=true</p> <p>[Install]    WantedBy=timers.target    ```</p> <ol> <li>Create a corresponding service file <code>file.service</code>:    ```ini    [Unit]    Description=Run my command    OnFailure=mail-systemd-failure@%n.service</li> </ol> <p>[Service]    Type=oneshot    ExecStart=/usr/local/bin/custom-command    User=dedicated-user    Group=dedicated-user    ```</p> <ol> <li> <p>Reload and enable the timer:    <code>bash    systemctl daemon-reload    systemctl enable file.timer    systemctl start file.timer</code></p> </li> <li> <p>List active timers:    <code>bash    systemctl list-timers</code></p> </li> </ol>"},{"location":"USER%20MANAGEMENT/","title":"USER MANAGEMENT","text":"<p>Here\u2019s a more polished and presentable version of your content, with improved formatting, clarity, and additional resources for better understanding:</p>"},{"location":"USER%20MANAGEMENT/#administrative-tasks","title":"Administrative Tasks","text":""},{"location":"USER%20MANAGEMENT/#introduction","title":"Introduction","text":"<p>Administrative tasks are responsibilities managed by system administrators (sysadmins). Sysadmins are IT professionals who ensure an organization's computer systems function efficiently and meet operational needs. Their duties include supporting, troubleshooting, and maintaining computer servers and networks.</p> <p>In this section, we will discuss:</p> <ol> <li>Managing user and group accounts and related system files.</li> <li>Automating system administrative tasks by scheduling jobs.</li> <li>Localization and internationalization.</li> </ol>"},{"location":"USER%20MANAGEMENT/#manage-user-and-group-accounts-and-related-system-files","title":"Manage User and Group Accounts and Related System Files","text":""},{"location":"USER%20MANAGEMENT/#managing-user-and-group-accounts","title":"Managing User and Group Accounts","text":"<p>Linux provides robust tools for managing user and group accounts, which are essential for system security and resource allocation.</p>"},{"location":"USER%20MANAGEMENT/#user-accounts","title":"User Accounts","text":"<p>1. Adding Users Use the <code>useradd</code> command to create new users.  </p> <pre><code>useradd username # Creates a user with no home directory\n</code></pre> <p>Common Flags for <code>useradd</code> </p> <ul> <li><code>-m</code>: Creates a home directory for the user.  </li> <li><code>-d</code>: Specifies a custom home directory.  </li> <li><code>-c</code>: Adds a comment (e.g., user description).  </li> <li><code>-g</code>: Assigns the user to a group.  </li> <li><code>-s</code>: Specifies the login shell.  </li> </ul> <p>Examples:  </p> <pre><code>useradd -m username \nuseradd -d /path/to/home username \nuseradd -c \"Comment about the user\" username \nuseradd -g groupname username \nuseradd -s /path/to/shell username \n</code></pre> <p>2. Managing Users </p> <ul> <li>Change Password: Use <code>passwd</code>.  </li> </ul> <p><code>sh   passwd username   passwd -e username # Immediately expires a user's password</code></p> <ul> <li>Modify User Attributes: Use <code>usermod</code>.  </li> </ul> <p><code>sh   usermod -l new_username old_username # Change username   usermod -c \"New comment\" username # Modify comment   usermod -g groupname username # Change primary group   usermod -d /path/to/home username # Change home directory</code></p> <ul> <li>Display User Information: Use <code>id</code>.  </li> </ul> <p><code>sh   id username</code></p> <ul> <li>List User Groups: Use <code>groups</code>.  </li> </ul> <p><code>sh   groups username</code></p> <ul> <li>Delete a User: Use <code>userdel</code>.  </li> </ul> <p><code>sh   userdel username</code></p> <ul> <li>Manage Password Aging: Use <code>chage</code>.  </li> </ul> <p><code>sh   chage -l username # Show password aging information   chage -m 14 -M 90 -W 7 username # Set minimum (14 days), maximum (90 days), and warning period (7 days)   chage -E year-month-day username # Set expiration date</code></p> <p>3. Filter System Databases Use <code>getent</code> to retrieve information from system databases.  </p> <pre><code>getent passwd username # Retrieve user password entry\ngetent group groupname # Retrieve group information\n</code></pre>"},{"location":"USER%20MANAGEMENT/#group-accounts","title":"Group Accounts","text":"<p>1. Creating Groups Use <code>groupadd</code> to create a new group.  </p> <pre><code>groupadd groupname\n</code></pre> <p>2. Managing Groups </p> <ul> <li>Modify Group Attributes: Use <code>groupmod</code>.  </li> </ul> <p><code>sh   groupmod -n new_group_name groupname</code></p> <ul> <li>Delete a Group: Use <code>groupdel</code>.  </li> </ul> <p><code>sh   groupdel groupname</code></p>"},{"location":"USER%20MANAGEMENT/#related-files","title":"Related Files","text":"<ul> <li>/etc/passwd: Stores user account information (Username, Password, UID, GID, Comment, Home Directory, Shell).  </li> <li>/etc/shadow: Stores encrypted user passwords and password aging details.  </li> <li>/etc/group: Stores group information (Group Name, Password, GID, Member List).  </li> <li>/etc/gshadow: Stores encrypted group passwords and group administrators.  </li> <li>/etc/skel: Template directory copied when creating new users.  </li> <li>/etc/login.defs: Contains system-wide defaults for user account management (e.g., password aging, UID/GID ranges).</li> </ul>"},{"location":"USER%20MANAGEMENT/#permissions-and-ownership","title":"Permissions and Ownership","text":"<ul> <li>Change Ownership: Use <code>chown</code>.  </li> </ul> <p><code>sh   chown username:groupname filename</code></p> <ul> <li>Change Group Ownership: Use <code>chgrp</code>.  </li> </ul> <p><code>sh   chgrp groupname filename</code></p> <ul> <li>Change File Permissions: Use <code>chmod</code>.  </li> </ul> <p><code>sh   chmod 755 filename # Owner: read/write/execute, Group: read/execute, Others: read/execute</code></p>"},{"location":"USER%20MANAGEMENT/#security-best-practices","title":"Security Best Practices","text":"<ol> <li>Strong Passwords: Enforce complexity policies.  </li> <li>Limited Permissions: Grant only necessary permissions to users.  </li> <li>Account Review: Identify and disable unused accounts.  </li> <li>Password Rotation: Require users to change passwords regularly.  </li> <li>System Updates: Patch vulnerabilities promptly.  </li> </ol>"},{"location":"USER%20MANAGEMENT/#commands-comparison","title":"Commands Comparison","text":""},{"location":"USER%20MANAGEMENT/#1-passwd-and-chage","title":"1. <code>passwd</code> and <code>chage</code>","text":"<code>passwd</code> Command <code>chage</code> Command Description <code>passwd -n</code> <code>chage -m</code> Set minimum password lifetime. <code>passwd -x</code> <code>chage -M</code> Set maximum password lifetime. <code>passwd -w</code> <code>chage -W</code> Set warning period before password expires. <code>passwd -i</code> <code>chage -I</code> Set inactivity period after password expiration. <code>passwd -S</code> <code>chage -l</code> Show password aging information."},{"location":"USER%20MANAGEMENT/#2-passwd-and-usermod","title":"2. <code>passwd</code> and <code>usermod</code>","text":"<code>passwd</code> Command <code>usermod</code> Command Description <code>passwd -l</code> <code>usermod -L</code> Lock a user account. <code>passwd -u</code> <code>usermod -U</code> Unlock a user account."},{"location":"USER%20MANAGEMENT/#3-useradd-and-usermod","title":"3. <code>useradd</code> and <code>usermod</code>","text":"Option <code>usermod</code> <code>useradd</code> Description <code>-e</code> Reset expiration date Set expiration date Manage account expiration. <code>-s</code> Change login shell Set login shell Specify user shell. <code>-c</code> Modify comment Create user with comment Add or update user description. <code>-d</code> Change home directory Set home directory Manage user home directory. <code>-g</code> Change primary group Add primary group Assign primary group. <code>-G</code>, <code>-aG</code> Add to secondary group Add to secondary group Manage secondary group membership."},{"location":"USER%20MANAGEMENT/#additional-resources","title":"Additional Resources","text":"<ol> <li>Linux Documentation: Refer to the official Linux man pages for detailed command usage (<code>man useradd</code>, <code>man usermod</code>, etc.).</li> <li>Security Guides: Explore security best practices from resources like the CIS Benchmarks.</li> <li>Automation Tools: Learn about scripting and automation with tools like <code>cron</code> and <code>Ansible</code>.</li> <li>Online Courses: Platforms like Linux Academy and Coursera offer in-depth Linux administration courses.</li> </ol>"},{"location":"VIRTUALIZATION/","title":"VIRTUALIZATION","text":"<p>Virtualization is a technology that enables a software platform, called a hypervisor, to run processes that contain a fully emulated computer system.</p>"},{"location":"VIRTUALIZATION/#types-of-hypervisors","title":"Types of Hypervisors","text":""},{"location":"VIRTUALIZATION/#xen","title":"Xen","text":"<ul> <li>Type: <code>Type-1 Hypervisor</code> (Bare-Metal Hypervisor)  </li> <li>Description: Xen is an open-source hypervisor that does not rely on an underlying operating system. It boots directly into the hypervisor, making it a bare-metal hypervisor.  </li> </ul>"},{"location":"VIRTUALIZATION/#kvm-kernel-virtual-machine","title":"KVM (Kernel Virtual Machine)","text":"<ul> <li>Type: <code>Type-1 and Type-2 Hypervisor</code> </li> <li>Description: KVM is a Linux kernel module for virtualization. It integrates with a running Linux installation, allowing it to function as both a Type-1 and Type-2 hypervisor. Virtual machines deployed with KVM use the <code>libvirt daemon</code> and associated utilities for management.  </li> </ul>"},{"location":"VIRTUALIZATION/#virtualbox","title":"VirtualBox","text":"<ul> <li>Type: <code>Type-2 Hypervisor</code> </li> <li>Description: VirtualBox is a popular desktop application for creating and managing virtual machines. It is cross-platform, supporting Linux, macOS, and Windows. As it requires an underlying operating system, it is classified as a Type-2 hypervisor.  </li> </ul>"},{"location":"VIRTUALIZATION/#migration","title":"Migration","text":"<p>Migration is the process of moving a virtual machine from one hypervisor installation to another.</p>"},{"location":"VIRTUALIZATION/#types-of-virtual-machines","title":"Types of Virtual Machines","text":""},{"location":"VIRTUALIZATION/#1-fully-virtualized","title":"1. Fully Virtualized","text":"<ul> <li>Description: All instructions executed by the guest operating system run within a fully virtualized environment. The guest is unaware it is running in a virtual machine (HardwareVM).  </li> <li>Use Case: Ideal for unmodified guest operating systems.  </li> </ul>"},{"location":"VIRTUALIZATION/#2-paravirtualized","title":"2. Paravirtualized","text":"<ul> <li>Description: The guest operating system is aware it is running in a virtual machine (PVM). It uses a modified kernel and guest drivers to optimize resource utilization.  </li> <li>Use Case: Offers better performance than fully virtualized guests.  </li> </ul>"},{"location":"VIRTUALIZATION/#3-hybrid","title":"3. Hybrid","text":"<ul> <li>Description: Combines full virtualization with paravirtualized drivers to overcome hardware-assisted full virtualization limitations.  </li> <li>Use Case: Balances performance and compatibility.  </li> </ul>"},{"location":"VIRTUALIZATION/#virtual-machine-hard-disk-image-location","title":"Virtual Machine Hard Disk Image Location","text":"<p>Virtual machine hard disk images are typically stored at:  </p> <pre><code>/var/lib/libvirt/images/\n</code></pre>"},{"location":"VIRTUALIZATION/#the-d-bus-machine-id","title":"The D-Bus Machine ID","text":"<p>The D-Bus Machine ID is a unique identification number generated during installation.  </p>"},{"location":"VIRTUALIZATION/#why-its-important","title":"Why It\u2019s Important","text":"<ul> <li>If a virtual machine is cloned, a new D-Bus Machine ID must be generated to ensure proper resource allocation.  </li> <li>No two Linux systems on a hypervisor should share the same D-Bus Machine ID.  </li> </ul>"},{"location":"VIRTUALIZATION/#generate-a-new-d-bus-machine-id","title":"Generate a New D-Bus Machine ID","text":"<pre><code>dbus-uuidgen --get\n</code></pre>"},{"location":"VIRTUALIZATION/#containerization","title":"Containerization","text":"<p>Containerization is a form of operating-system\u2013level virtualization that allows software applications to run in isolated user spaces called containers.  </p>"},{"location":"VIRTUALIZATION/#key-points","title":"Key Points","text":"<ul> <li>Lightweight and portable.  </li> <li>Can run in any cloud or non-cloud environment.  </li> </ul>"},{"location":"VIRTUALIZATION/#containers","title":"Containers","text":"<p>Containers are lightweight software packages that include all necessary dependencies to run an application in any environment.  </p>"},{"location":"about/","title":"About","text":""},{"location":"about/#about-this-project","title":"About This Project","text":"<p>This project is designed to provide reliable and summarized resources for individuals pursuing Linux Professional Institution Certification (LPIC). It compiles important information, guides, and resources in an easily accessible format.</p>"},{"location":"about/#key-features","title":"Key Features","text":"<ul> <li> <p>Documentation in Markdown: The content is written in Markdown format, making it easy to read, modify, and share. Markdown offers a clean and simple syntax, which is perfect for technical documentation and learning resources.</p> </li> <li> <p>Black/White Theme for Impaired Users: The project is designed with accessibility in mind, featuring a black/white theme that is more suitable for individuals with visual impairments. The high contrast between black and white helps improve readability for users who have difficulty with color differentiation.</p> </li> </ul> <p>This project aims to ensure users have a well-rounded understanding of Linux systems, partitioning, file systems, and file management, making it a great tool for anyone preparing for the LPIC exams.</p>"},{"location":"localization/","title":"Localization in Linux","text":"<p>Localization in Linux refers to the process of adapting the system and its applications to a specific language, region, or culture. This involves configuring environment variables, system settings, and files to match the conventions of the target locale. Applications rely on these configurations to display the correct language, time, and date formats.</p>"},{"location":"localization/#key-concepts-and-commands","title":"Key Concepts and Commands","text":""},{"location":"localization/#1-time-and-date","title":"1. Time and Date","text":""},{"location":"localization/#date","title":"<code>date</code>","text":"<p>Displays the current date and time. You can customize the output using format specifiers:</p> <pre><code>date +'%Y-%M-%D %C'  # Year, Month, Day, Century\n</code></pre>"},{"location":"localization/#cal","title":"<code>cal</code>","text":"<p>Displays the calendar. Use <code>cal -#</code> to show previous and next months:</p> <pre><code>cal -3  # Shows the current, previous, and next month\n</code></pre>"},{"location":"localization/#timedatectl","title":"<code>timedatectl</code>","text":"<p>Displays local time, timezone, UTC, and other time-related information:</p> <pre><code>timedatectl\n</code></pre>"},{"location":"localization/#tzselect","title":"<code>tzselect</code>","text":"<p>Provides an interactive method to select a default timezone:</p> <pre><code>tzselect\n</code></pre>"},{"location":"localization/#2-timezone-configuration","title":"2. Timezone Configuration","text":"<ul> <li><code>/etc/timezone</code>: Stores the system's timezone.</li> <li><code>/etc/localtime</code>: Contains data for the OS to adjust its clock. It is often a symbolic link to a file in <code>/usr/share/zoneinfo</code>.</li> <li><code>/usr/share/zoneinfo</code>: Directory containing all timezone files. For example, the timezone for Douala, Africa, is located at:</li> </ul> <p><code>/usr/share/zoneinfo/Africa/Douala</code></p>"},{"location":"localization/#3-language-and-character-encoding","title":"3. Language and Character Encoding","text":""},{"location":"localization/#locale","title":"Locale","text":"<p>A set of parameters defining the user's language, country, and preferences. The <code>LANG</code> environment variable stores the basic locale configuration in the format <code>ab_CD</code>, where:</p> <ul> <li><code>ab</code>: Language code (e.g., <code>en</code> for English).</li> <li><code>CD</code>: Region code (e.g., <code>US</code> for the United States).</li> </ul>"},{"location":"localization/#locale_1","title":"<code>locale</code>","text":"<p>Displays the current locale settings, including sub-environment variables:</p> <pre><code>locale\n</code></pre>"},{"location":"localization/#locale-sub-variables","title":"Locale Sub-Variables","text":"<ul> <li><code>LC_COLLATE</code>: Sets alphabetical ordering.</li> <li><code>LC_CTYPE</code>: Defines character handling.</li> <li><code>LC_MESSAGES</code>: Sets message language.</li> <li><code>LC_NUMERIC</code>: Sets numerical format for non-monetary values.</li> <li><code>LC_PAPER</code>: Sets standard paper size.</li> <li><code>LC_TIME</code>: Sets time and date format.</li> <li><code>LC_ALL</code>: Overrides all other locale variables.</li> </ul>"},{"location":"localization/#localectl","title":"<code>localectl</code>","text":"<p>Available on systems using <code>systemd</code>, it changes the system locale:</p> <pre><code>localectl set-locale LANG=en_US.UTF-8\n</code></pre>"},{"location":"localization/#4-encoding-conversion","title":"4. Encoding Conversion","text":""},{"location":"localization/#iconv","title":"<code>iconv</code>","text":"<p>Converts text files between character encodings. For example, to convert a file from ISO-8859-1 to UTF-8:</p> <pre><code>iconv -f ISO-8859-1 -t UTF-8 original.txt &gt; converted.txt\n</code></pre>"},{"location":"localization/#example","title":"Example","text":"<p>Original ISO-8859-1 encoded file (<code>example.txt</code>):</p> <pre><code>Bonjour, comment allez-vous?\n\nDas ist ein Beispieltext auf Deutsch.\n\nEste es un ejemplo de texto en espa\u00f1ol.\n\n\u0192 (U+0192) is a special character.\n\n\u20ac (U+20AC) is another special character.\n</code></pre> <p>Convert to UTF-8:</p> <pre><code>iconv -f ISO-8859-1 -t UTF-8 example.txt &gt; converted.txt\n</code></pre>"},{"location":"localization/#summary","title":"Summary","text":"<p>Localization in Linux involves configuring time, date, language, and character encoding to suit a specific region or culture. Key tools include <code>date</code>, <code>cal</code>, <code>timedatectl</code>, <code>tzselect</code>, <code>locale</code>, and <code>iconv</code>. Understanding these concepts ensures your system and applications display information correctly for your locale.</p>"}]}